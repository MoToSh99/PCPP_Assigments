Starting a Gradle Daemon, 1 busy and 1 incompatible Daemons could not be reused, use --status for details
> Task :app:cleanTest
> Task :app:compileJava UP-TO-DATE
> Task :app:processResources NO-SOURCE
> Task :app:classes UP-TO-DATE
> Task :app:compileTestJava
> Task :app:processTestResources NO-SOURCE
> Task :app:testClasses

> Task :app:test

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[1] STANDARD_OUT
    2
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[1] FAILED
    java.lang.AssertionError at ConcurrentSetTest.java:61

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[2] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[2] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[3] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[3] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[4] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[4] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[5] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[5] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[6] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[6] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[7] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[7] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[8] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[8] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[9] STANDARD_OUT
    2
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[9] FAILED
    java.lang.AssertionError at ConcurrentSetTest.java:61

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[10] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[10] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[11] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[11] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[12] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[12] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[13] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[13] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[14] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[14] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[15] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[15] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[16] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[16] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[17] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[17] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[18] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[18] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[19] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[19] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[20] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[20] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[21] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[21] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[22] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[22] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[23] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[23] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[24] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[24] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[25] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[25] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[26] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[26] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[27] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[27] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[28] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[28] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[29] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[29] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[30] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[30] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[31] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[31] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[32] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[32] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[33] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[33] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[34] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[34] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[35] STANDARD_OUT
    5
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[35] FAILED
    java.lang.AssertionError at ConcurrentSetTest.java:61

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[36] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[36] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[37] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[37] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[38] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[38] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[39] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[39] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[40] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[40] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[41] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[41] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[42] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[42] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[43] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[43] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[44] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[44] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[45] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[45] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[46] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[46] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[47] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[47] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[48] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[48] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[49] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[49] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[50] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[50] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[51] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[51] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[52] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[52] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[53] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[53] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[54] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[54] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[55] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[55] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[56] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[56] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[57] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[57] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[58] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[58] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[59] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[59] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[60] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[60] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[61] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[61] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[62] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[62] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[63] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[63] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[64] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[64] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[65] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[65] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[66] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[66] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[67] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[67] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[68] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[68] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[69] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[69] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[70] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[70] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[71] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[71] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[72] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[72] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[73] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[73] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[74] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[74] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[75] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[75] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[76] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[76] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[77] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[77] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[78] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[78] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[79] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[79] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[80] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[80] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[81] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[81] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[82] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[82] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[83] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[83] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[84] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[84] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[85] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[85] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[86] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[86] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[87] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[87] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[88] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[88] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[89] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[89] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[90] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[90] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[91] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[91] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[92] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[92] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[93] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[93] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[94] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[94] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[95] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[95] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[96] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[96] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[97] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[97] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[98] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[98] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[99] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[99] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[100] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[100] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[101] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[101] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[102] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[102] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[103] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[103] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[104] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[104] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[105] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[105] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[106] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[106] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[107] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[107] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[108] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[108] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[109] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[109] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[110] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[110] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[111] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[111] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[112] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[112] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[113] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[113] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[114] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[114] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[115] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[115] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[116] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[116] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[117] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[117] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[118] STANDARD_OUT
    3
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[118] FAILED
    java.lang.AssertionError at ConcurrentSetTest.java:61

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[119] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[119] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[120] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[120] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[121] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[121] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[122] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[122] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[123] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[123] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[124] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[124] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[125] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[125] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[126] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[126] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[127] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[127] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[128] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[128] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[129] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[129] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[130] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[130] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[131] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[131] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[132] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[132] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[133] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[133] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[134] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[134] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[135] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[135] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[136] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[136] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[137] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[137] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[138] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[138] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[139] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[139] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[140] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[140] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[141] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[141] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[142] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[142] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[143] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[143] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[144] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[144] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[145] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[145] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[146] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[146] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[147] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[147] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[148] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[148] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[149] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[149] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[150] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[150] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[151] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[151] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[152] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[152] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[153] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[153] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[154] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[154] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[155] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[155] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[156] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[156] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[157] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[157] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[158] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[158] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[159] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[159] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[160] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[160] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[161] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[161] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[162] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[162] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[163] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[163] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[164] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[164] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[165] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[165] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[166] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[166] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[167] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[167] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[168] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[168] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[169] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[169] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[170] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[170] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[171] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[171] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[172] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[172] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[173] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[173] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[174] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[174] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[175] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[175] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[176] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[176] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[177] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[177] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[178] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[178] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[179] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[179] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[180] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[180] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[181] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[181] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[182] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[182] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[183] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[183] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[184] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[184] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[185] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[185] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[186] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[186] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[187] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[187] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[188] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[188] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[189] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[189] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[190] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[190] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[191] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[191] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[192] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[192] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[193] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[193] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[194] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[194] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[195] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[195] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[196] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[196] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[197] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[197] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[198] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[198] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[199] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[199] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[200] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[200] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[201] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[201] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[202] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[202] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[203] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[203] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[204] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[204] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[205] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[205] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[206] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[206] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[207] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[207] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[208] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[208] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[209] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[209] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[210] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[210] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[211] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[211] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[212] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[212] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[213] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[213] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[214] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[214] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[215] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[215] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[216] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[216] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[217] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[217] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[218] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[218] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[219] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[219] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[220] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[220] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[221] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[221] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[222] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[222] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[223] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[223] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[224] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[224] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[225] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[225] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[226] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[226] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[227] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[227] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[228] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[228] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[229] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[229] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[230] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[230] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[231] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[231] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[232] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[232] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[233] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[233] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[234] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[234] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[235] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[235] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[236] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[236] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[237] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[237] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[238] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[238] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[239] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[239] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[240] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[240] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[241] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[241] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[242] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[242] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[243] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[243] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[244] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[244] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[245] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[245] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[246] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[246] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[247] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[247] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[248] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[248] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[249] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[249] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[250] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[250] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[251] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[251] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[252] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[252] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[253] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[253] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[254] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[254] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[255] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[255] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[256] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[256] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[257] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[257] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[258] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[258] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[259] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[259] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[260] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[260] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[261] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[261] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[262] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[262] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[263] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[263] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[264] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[264] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[265] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[265] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[266] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[266] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[267] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[267] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[268] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[268] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[269] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[269] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[270] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[270] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[271] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[271] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[272] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[272] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[273] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[273] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[274] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[274] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[275] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[275] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[276] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[276] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[277] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[277] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[278] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[278] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[279] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[279] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[280] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[280] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[281] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[281] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[282] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[282] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[283] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[283] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[284] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[284] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[285] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[285] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[286] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[286] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[287] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[287] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[288] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[288] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[289] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[289] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[290] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[290] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[291] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[291] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[292] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[292] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[293] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[293] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[294] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[294] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[295] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[295] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[296] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[296] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[297] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[297] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[298] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[298] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[299] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[299] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[300] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[300] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[301] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[301] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[302] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[302] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[303] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[303] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[304] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[304] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[305] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[305] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[306] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[306] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[307] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[307] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[308] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[308] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[309] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[309] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[310] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[310] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[311] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[311] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[312] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[312] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[313] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[313] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[314] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[314] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[315] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[315] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[316] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[316] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[317] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[317] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[318] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[318] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[319] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[319] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[320] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[320] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[321] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[321] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[322] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[322] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[323] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[323] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[324] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[324] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[325] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[325] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[326] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[326] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[327] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[327] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[328] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[328] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[329] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[329] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[330] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[330] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[331] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[331] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[332] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[332] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[333] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[333] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[334] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[334] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[335] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[335] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[336] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[336] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[337] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[337] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[338] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[338] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[339] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[339] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[340] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[340] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[341] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[341] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[342] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[342] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[343] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[343] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[344] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[344] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[345] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[345] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[346] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[346] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[347] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[347] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[348] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[348] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[349] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[349] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[350] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[350] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[351] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[351] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[352] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[352] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[353] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[353] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[354] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[354] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[355] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[355] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[356] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[356] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[357] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[357] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[358] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[358] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[359] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[359] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[360] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[360] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[361] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[361] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[362] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[362] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[363] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[363] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[364] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[364] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[365] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[365] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[366] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[366] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[367] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[367] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[368] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[368] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[369] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[369] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[370] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[370] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[371] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[371] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[372] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[372] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[373] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[373] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[374] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[374] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[375] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[375] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[376] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[376] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[377] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[377] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[378] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[378] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[379] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[379] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[380] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[380] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[381] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[381] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[382] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[382] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[383] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[383] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[384] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[384] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[385] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[385] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[386] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[386] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[387] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[387] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[388] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[388] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[389] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[389] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[390] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[390] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[391] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[391] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[392] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[392] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[393] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[393] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[394] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[394] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[395] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[395] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[396] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[396] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[397] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[397] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[398] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[398] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[399] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[399] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[400] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[400] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[401] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[401] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[402] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[402] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[403] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[403] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[404] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[404] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[405] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[405] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[406] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[406] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[407] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[407] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[408] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[408] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[409] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[409] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[410] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[410] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[411] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[411] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[412] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[412] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[413] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[413] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[414] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[414] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[415] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[415] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[416] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[416] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[417] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[417] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[418] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[418] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[419] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[419] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[420] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[420] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[421] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[421] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[422] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[422] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[423] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[423] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[424] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[424] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[425] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[425] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[426] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[426] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[427] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[427] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[428] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[428] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[429] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[429] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[430] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[430] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[431] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[431] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[432] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[432] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[433] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[433] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[434] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[434] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[435] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[435] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[436] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[436] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[437] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[437] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[438] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[438] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[439] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[439] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[440] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[440] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[441] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[441] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[442] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[442] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[443] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[443] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[444] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[444] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[445] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[445] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[446] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[446] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[447] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[447] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[448] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[448] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[449] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[449] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[450] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[450] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[451] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[451] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[452] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[452] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[453] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[453] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[454] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[454] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[455] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[455] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[456] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[456] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[457] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[457] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[458] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[458] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[459] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[459] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[460] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[460] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[461] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[461] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[462] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[462] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[463] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[463] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[464] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[464] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[465] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[465] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[466] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[466] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[467] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[467] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[468] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[468] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[469] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[469] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[470] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[470] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[471] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[471] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[472] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[472] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[473] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[473] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[474] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[474] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[475] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[475] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[476] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[476] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[477] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[477] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[478] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[478] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[479] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[479] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[480] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[480] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[481] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[481] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[482] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[482] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[483] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[483] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[484] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[484] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[485] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[485] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[486] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[486] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[487] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[487] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[488] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[488] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[489] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[489] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[490] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[490] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[491] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[491] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[492] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[492] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[493] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[493] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[494] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[494] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[495] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[495] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[496] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[496] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[497] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[497] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[498] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[498] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[499] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[499] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[500] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[500] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[501] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[501] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[502] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[502] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[503] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[503] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[504] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[504] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[505] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[505] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[506] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[506] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[507] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[507] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[508] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[508] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[509] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[509] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[510] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[510] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[511] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[511] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[512] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[512] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[513] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[513] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[514] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[514] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[515] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[515] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[516] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[516] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[517] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[517] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[518] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[518] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[519] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[519] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[520] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[520] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[521] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[521] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[522] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[522] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[523] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[523] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[524] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[524] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[525] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[525] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[526] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[526] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[527] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[527] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[528] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[528] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[529] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[529] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[530] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[530] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[531] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[531] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[532] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[532] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[533] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[533] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[534] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[534] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[535] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[535] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[536] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[536] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[537] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[537] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[538] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[538] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[539] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[539] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[540] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[540] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[541] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[541] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[542] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[542] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[543] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[543] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[544] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[544] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[545] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[545] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[546] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[546] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[547] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[547] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[548] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[548] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[549] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[549] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[550] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[550] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[551] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[551] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[552] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[552] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[553] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[553] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[554] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[554] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[555] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[555] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[556] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[556] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[557] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[557] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[558] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[558] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[559] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[559] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[560] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[560] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[561] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[561] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[562] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[562] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[563] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[563] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[564] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[564] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[565] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[565] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[566] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[566] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[567] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[567] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[568] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[568] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[569] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[569] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[570] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[570] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[571] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[571] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[572] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[572] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[573] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[573] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[574] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[574] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[575] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[575] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[576] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[576] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[577] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[577] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[578] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[578] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[579] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[579] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[580] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[580] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[581] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[581] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[582] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[582] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[583] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[583] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[584] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[584] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[585] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[585] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[586] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[586] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[587] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[587] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[588] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[588] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[589] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[589] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[590] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[590] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[591] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[591] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[592] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[592] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[593] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[593] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[594] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[594] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[595] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[595] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[596] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[596] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[597] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[597] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[598] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[598] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[599] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[599] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[600] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[600] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[601] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[601] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[602] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[602] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[603] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[603] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[604] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[604] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[605] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[605] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[606] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[606] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[607] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[607] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[608] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[608] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[609] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[609] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[610] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[610] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[611] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[611] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[612] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[612] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[613] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[613] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[614] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[614] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[615] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[615] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[616] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[616] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[617] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[617] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[618] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[618] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[619] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[619] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[620] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[620] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[621] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[621] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[622] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[622] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[623] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[623] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[624] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[624] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[625] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[625] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[626] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[626] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[627] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[627] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[628] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[628] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[629] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[629] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[630] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[630] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[631] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[631] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[632] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[632] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[633] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[633] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[634] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[634] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[635] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[635] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[636] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[636] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[637] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[637] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[638] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[638] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[639] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[639] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[640] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[640] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[641] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[641] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[642] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[642] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[643] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[643] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[644] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[644] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[645] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[645] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[646] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[646] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[647] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[647] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[648] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[648] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[649] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[649] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[650] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[650] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[651] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[651] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[652] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[652] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[653] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[653] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[654] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[654] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[655] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[655] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[656] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[656] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[657] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[657] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[658] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[658] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[659] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[659] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[660] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[660] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[661] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[661] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[662] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[662] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[663] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[663] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[664] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[664] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[665] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[665] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[666] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[666] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[667] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[667] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[668] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[668] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[669] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[669] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[670] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[670] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[671] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[671] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[672] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[672] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[673] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[673] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[674] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[674] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[675] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[675] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[676] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[676] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[677] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[677] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[678] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[678] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[679] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[679] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[680] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[680] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[681] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[681] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[682] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[682] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[683] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[683] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[684] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[684] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[685] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[685] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[686] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[686] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[687] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[687] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[688] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[688] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[689] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[689] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[690] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[690] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[691] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[691] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[692] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[692] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[693] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[693] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[694] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[694] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[695] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[695] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[696] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[696] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[697] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[697] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[698] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[698] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[699] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[699] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[700] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[700] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[701] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[701] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[702] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[702] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[703] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[703] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[704] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[704] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[705] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[705] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[706] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[706] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[707] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[707] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[708] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[708] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[709] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[709] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[710] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[710] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[711] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[711] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[712] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[712] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[713] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[713] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[714] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[714] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[715] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[715] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[716] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[716] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[717] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[717] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[718] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[718] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[719] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[719] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[720] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[720] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[721] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[721] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[722] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[722] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[723] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[723] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[724] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[724] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[725] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[725] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[726] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[726] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[727] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[727] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[728] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[728] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[729] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[729] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[730] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[730] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[731] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[731] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[732] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[732] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[733] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[733] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[734] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[734] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[735] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[735] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[736] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[736] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[737] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[737] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[738] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[738] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[739] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[739] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[740] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[740] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[741] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[741] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[742] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[742] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[743] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[743] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[744] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[744] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[745] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[745] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[746] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[746] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[747] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[747] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[748] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[748] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[749] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[749] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[750] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[750] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[751] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[751] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[752] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[752] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[753] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[753] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[754] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[754] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[755] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[755] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[756] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[756] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[757] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[757] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[758] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[758] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[759] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[759] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[760] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[760] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[761] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[761] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[762] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[762] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[763] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[763] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[764] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[764] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[765] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[765] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[766] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[766] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[767] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[767] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[768] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[768] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[769] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[769] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[770] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[770] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[771] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[771] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[772] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[772] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[773] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[773] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[774] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[774] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[775] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[775] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[776] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[776] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[777] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[777] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[778] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[778] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[779] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[779] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[780] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[780] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[781] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[781] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[782] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[782] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[783] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[783] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[784] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[784] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[785] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[785] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[786] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[786] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[787] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[787] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[788] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[788] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[789] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[789] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[790] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[790] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[791] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[791] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[792] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[792] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[793] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[793] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[794] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[794] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[795] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[795] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[796] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[796] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[797] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[797] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[798] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[798] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[799] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[799] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[800] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[800] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[801] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[801] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[802] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[802] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[803] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[803] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[804] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[804] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[805] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[805] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[806] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[806] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[807] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[807] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[808] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[808] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[809] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[809] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[810] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[810] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[811] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[811] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[812] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[812] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[813] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[813] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[814] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[814] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[815] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[815] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[816] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[816] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[817] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[817] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[818] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[818] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[819] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[819] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[820] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[820] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[821] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[821] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[822] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[822] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[823] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[823] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[824] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[824] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[825] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[825] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[826] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[826] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[827] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[827] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[828] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[828] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[829] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[829] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[830] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[830] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[831] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[831] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[832] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[832] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[833] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[833] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[834] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[834] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[835] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[835] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[836] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[836] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[837] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[837] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[838] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[838] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[839] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[839] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[840] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[840] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[841] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[841] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[842] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[842] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[843] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[843] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[844] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[844] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[845] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[845] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[846] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[846] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[847] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[847] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[848] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[848] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[849] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[849] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[850] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[850] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[851] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[851] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[852] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[852] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[853] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[853] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[854] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[854] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[855] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[855] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[856] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[856] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[857] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[857] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[858] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[858] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[859] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[859] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[860] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[860] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[861] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[861] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[862] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[862] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[863] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[863] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[864] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[864] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[865] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[865] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[866] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[866] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[867] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[867] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[868] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[868] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[869] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[869] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[870] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[870] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[871] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[871] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[872] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[872] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[873] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[873] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[874] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[874] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[875] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[875] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[876] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[876] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[877] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[877] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[878] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[878] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[879] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[879] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[880] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[880] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[881] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[881] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[882] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[882] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[883] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[883] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[884] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[884] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[885] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[885] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[886] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[886] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[887] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[887] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[888] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[888] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[889] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[889] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[890] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[890] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[891] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[891] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[892] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[892] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[893] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[893] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[894] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[894] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[895] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[895] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[896] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[896] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[897] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[897] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[898] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[898] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[899] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[899] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[900] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[900] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[901] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[901] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[902] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[902] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[903] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[903] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[904] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[904] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[905] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[905] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[906] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[906] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[907] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[907] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[908] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[908] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[909] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[909] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[910] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[910] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[911] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[911] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[912] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[912] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[913] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[913] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[914] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[914] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[915] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[915] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[916] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[916] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[917] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[917] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[918] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[918] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[919] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[919] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[920] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[920] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[921] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[921] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[922] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[922] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[923] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[923] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[924] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[924] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[925] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[925] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[926] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[926] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[927] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[927] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[928] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[928] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[929] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[929] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[930] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[930] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[931] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[931] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[932] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[932] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[933] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[933] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[934] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[934] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[935] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[935] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[936] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[936] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[937] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[937] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[938] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[938] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[939] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[939] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[940] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[940] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[941] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[941] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[942] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[942] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[943] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[943] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[944] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[944] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[945] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[945] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[946] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[946] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[947] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[947] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[948] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[948] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[949] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[949] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[950] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[950] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[951] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[951] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[952] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[952] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[953] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[953] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[954] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[954] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[955] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[955] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[956] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[956] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[957] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[957] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[958] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[958] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[959] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[959] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[960] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[960] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[961] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[961] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[962] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[962] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[963] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[963] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[964] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[964] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[965] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[965] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[966] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[966] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[967] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[967] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[968] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[968] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[969] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[969] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[970] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[970] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[971] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[971] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[972] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[972] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[973] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[973] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[974] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[974] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[975] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[975] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[976] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[976] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[977] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[977] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[978] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[978] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[979] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[979] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[980] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[980] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[981] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[981] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[982] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[982] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[983] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[983] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[984] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[984] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[985] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[985] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[986] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[986] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[987] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[987] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[988] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[988] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[989] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[989] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[990] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[990] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[991] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[991] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[992] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[992] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[993] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[993] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[994] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[994] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[995] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[995] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[996] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[996] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[997] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[997] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[998] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[998] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[999] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[999] PASSED

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[1000] STANDARD_OUT
    1
    1 

ConcurrentSetTest > Functional correctness test for add(Integer element) > testingconcurrency.ConcurrentSetTest.addTest()[1000] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1] STANDARD_OUT
    1

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1] FAILED
    java.lang.AssertionError at ConcurrentSetTest.java:96

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3] STANDARD_OUT
    1

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3] FAILED
    java.lang.AssertionError at ConcurrentSetTest.java:96

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4] STANDARD_OUT
    1

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4] FAILED
    java.lang.AssertionError at ConcurrentSetTest.java:96

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[7] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[7] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[8] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[8] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[9] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[9] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[10] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[10] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[11] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[11] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[12] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[12] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[13] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[13] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[14] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[14] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[15] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[15] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[16] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[16] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[17] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[17] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[18] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[18] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[19] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[19] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[20] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[20] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[21] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[21] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[22] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[22] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[23] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[23] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[24] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[24] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[25] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[25] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[26] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[26] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[27] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[27] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[28] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[28] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[29] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[29] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[30] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[30] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[31] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[31] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[32] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[32] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[33] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[33] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[34] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[34] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[35] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[35] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[36] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[36] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[37] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[37] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[38] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[38] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[39] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[39] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[40] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[40] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[41] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[41] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[42] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[42] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[43] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[43] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[44] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[44] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[45] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[45] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[46] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[46] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[47] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[47] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[48] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[48] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[49] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[49] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[50] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[50] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[51] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[51] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[52] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[52] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[53] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[53] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[54] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[54] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[55] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[55] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[56] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[56] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[57] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[57] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[58] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[58] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[59] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[59] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[60] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[60] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[61] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[61] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[62] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[62] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[63] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[63] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[64] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[64] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[65] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[65] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[66] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[66] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[67] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[67] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[68] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[68] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[69] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[69] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[70] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[70] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[71] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[71] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[72] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[72] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[73] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[73] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[74] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[74] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[75] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[75] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[76] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[76] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[77] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[77] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[78] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[78] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[79] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[79] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[80] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[80] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[81] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[81] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[82] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[82] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[83] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[83] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[84] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[84] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[85] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[85] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[86] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[86] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[87] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[87] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[88] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[88] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[89] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[89] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[90] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[90] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[91] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[91] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[92] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[92] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[93] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[93] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[94] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[94] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[95] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[95] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[96] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[96] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[97] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[97] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[98] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[98] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[99] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[99] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[100] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[100] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[101] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[101] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[102] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[102] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[103] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[103] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[104] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[104] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[105] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[105] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[106] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[106] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[107] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[107] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[108] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[108] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[109] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[109] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[110] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[110] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[111] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[111] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[112] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[112] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[113] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[113] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[114] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[114] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[115] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[115] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[116] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[116] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[117] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[117] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[118] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[118] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[119] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[119] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[120] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[120] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[121] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[121] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[122] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[122] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[123] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[123] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[124] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[124] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[125] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[125] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[126] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[126] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[127] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[127] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[128] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[128] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[129] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[129] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[130] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[130] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[131] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[131] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[132] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[132] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[133] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[133] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[134] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[134] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[135] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[135] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[136] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[136] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[137] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[137] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[138] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[138] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[139] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[139] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[140] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[140] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[141] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[141] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[142] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[142] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[143] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[143] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[144] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[144] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[145] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[145] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[146] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[146] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[147] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[147] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[148] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[148] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[149] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[149] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[150] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[150] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[151] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[151] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[152] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[152] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[153] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[153] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[154] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[154] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[155] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[155] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[156] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[156] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[157] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[157] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[158] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[158] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[159] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[159] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[160] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[160] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[161] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[161] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[162] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[162] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[163] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[163] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[164] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[164] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[165] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[165] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[166] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[166] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[167] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[167] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[168] STANDARD_OUT
    1

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[168] FAILED
    java.lang.AssertionError at ConcurrentSetTest.java:96

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[169] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[169] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[170] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[170] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[171] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[171] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[172] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[172] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[173] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[173] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[174] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[174] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[175] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[175] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[176] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[176] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[177] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[177] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[178] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[178] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[179] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[179] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[180] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[180] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[181] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[181] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[182] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[182] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[183] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[183] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[184] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[184] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[185] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[185] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[186] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[186] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[187] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[187] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[188] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[188] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[189] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[189] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[190] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[190] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[191] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[191] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[192] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[192] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[193] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[193] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[194] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[194] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[195] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[195] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[196] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[196] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[197] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[197] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[198] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[198] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[199] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[199] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[200] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[200] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[201] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[201] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[202] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[202] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[203] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[203] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[204] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[204] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[205] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[205] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[206] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[206] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[207] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[207] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[208] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[208] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[209] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[209] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[210] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[210] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[211] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[211] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[212] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[212] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[213] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[213] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[214] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[214] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[215] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[215] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[216] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[216] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[217] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[217] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[218] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[218] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[219] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[219] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[220] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[220] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[221] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[221] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[222] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[222] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[223] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[223] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[224] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[224] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[225] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[225] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[226] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[226] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[227] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[227] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[228] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[228] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[229] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[229] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[230] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[230] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[231] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[231] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[232] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[232] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[233] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[233] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[234] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[234] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[235] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[235] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[236] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[236] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[237] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[237] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[238] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[238] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[239] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[239] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[240] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[240] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[241] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[241] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[242] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[242] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[243] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[243] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[244] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[244] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[245] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[245] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[246] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[246] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[247] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[247] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[248] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[248] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[249] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[249] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[250] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[250] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[251] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[251] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[252] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[252] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[253] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[253] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[254] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[254] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[255] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[255] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[256] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[256] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[257] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[257] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[258] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[258] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[259] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[259] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[260] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[260] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[261] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[261] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[262] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[262] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[263] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[263] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[264] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[264] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[265] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[265] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[266] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[266] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[267] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[267] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[268] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[268] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[269] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[269] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[270] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[270] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[271] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[271] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[272] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[272] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[273] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[273] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[274] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[274] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[275] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[275] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[276] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[276] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[277] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[277] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[278] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[278] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[279] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[279] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[280] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[280] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[281] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[281] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[282] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[282] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[283] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[283] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[284] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[284] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[285] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[285] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[286] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[286] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[287] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[287] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[288] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[288] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[289] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[289] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[290] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[290] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[291] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[291] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[292] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[292] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[293] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[293] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[294] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[294] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[295] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[295] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[296] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[296] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[297] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[297] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[298] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[298] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[299] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[299] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[300] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[300] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[301] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[301] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[302] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[302] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[303] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[303] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[304] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[304] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[305] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[305] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[306] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[306] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[307] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[307] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[308] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[308] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[309] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[309] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[310] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[310] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[311] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[311] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[312] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[312] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[313] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[313] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[314] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[314] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[315] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[315] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[316] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[316] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[317] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[317] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[318] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[318] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[319] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[319] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[320] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[320] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[321] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[321] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[322] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[322] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[323] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[323] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[324] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[324] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[325] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[325] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[326] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[326] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[327] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[327] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[328] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[328] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[329] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[329] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[330] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[330] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[331] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[331] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[332] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[332] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[333] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[333] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[334] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[334] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[335] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[335] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[336] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[336] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[337] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[337] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[338] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[338] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[339] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[339] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[340] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[340] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[341] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[341] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[342] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[342] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[343] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[343] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[344] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[344] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[345] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[345] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[346] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[346] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[347] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[347] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[348] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[348] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[349] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[349] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[350] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[350] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[351] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[351] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[352] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[352] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[353] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[353] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[354] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[354] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[355] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[355] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[356] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[356] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[357] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[357] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[358] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[358] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[359] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[359] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[360] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[360] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[361] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[361] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[362] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[362] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[363] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[363] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[364] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[364] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[365] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[365] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[366] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[366] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[367] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[367] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[368] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[368] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[369] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[369] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[370] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[370] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[371] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[371] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[372] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[372] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[373] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[373] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[374] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[374] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[375] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[375] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[376] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[376] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[377] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[377] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[378] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[378] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[379] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[379] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[380] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[380] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[381] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[381] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[382] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[382] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[383] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[383] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[384] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[384] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[385] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[385] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[386] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[386] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[387] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[387] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[388] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[388] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[389] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[389] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[390] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[390] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[391] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[391] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[392] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[392] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[393] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[393] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[394] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[394] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[395] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[395] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[396] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[396] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[397] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[397] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[398] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[398] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[399] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[399] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[400] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[400] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[401] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[401] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[402] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[402] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[403] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[403] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[404] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[404] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[405] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[405] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[406] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[406] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[407] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[407] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[408] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[408] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[409] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[409] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[410] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[410] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[411] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[411] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[412] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[412] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[413] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[413] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[414] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[414] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[415] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[415] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[416] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[416] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[417] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[417] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[418] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[418] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[419] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[419] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[420] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[420] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[421] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[421] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[422] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[422] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[423] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[423] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[424] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[424] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[425] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[425] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[426] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[426] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[427] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[427] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[428] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[428] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[429] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[429] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[430] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[430] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[431] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[431] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[432] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[432] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[433] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[433] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[434] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[434] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[435] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[435] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[436] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[436] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[437] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[437] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[438] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[438] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[439] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[439] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[440] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[440] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[441] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[441] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[442] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[442] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[443] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[443] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[444] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[444] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[445] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[445] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[446] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[446] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[447] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[447] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[448] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[448] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[449] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[449] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[450] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[450] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[451] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[451] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[452] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[452] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[453] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[453] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[454] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[454] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[455] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[455] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[456] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[456] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[457] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[457] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[458] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[458] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[459] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[459] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[460] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[460] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[461] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[461] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[462] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[462] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[463] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[463] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[464] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[464] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[465] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[465] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[466] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[466] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[467] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[467] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[468] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[468] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[469] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[469] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[470] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[470] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[471] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[471] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[472] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[472] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[473] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[473] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[474] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[474] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[475] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[475] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[476] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[476] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[477] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[477] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[478] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[478] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[479] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[479] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[480] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[480] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[481] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[481] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[482] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[482] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[483] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[483] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[484] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[484] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[485] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[485] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[486] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[486] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[487] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[487] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[488] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[488] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[489] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[489] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[490] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[490] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[491] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[491] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[492] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[492] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[493] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[493] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[494] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[494] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[495] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[495] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[496] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[496] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[497] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[497] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[498] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[498] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[499] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[499] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[500] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[500] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[501] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[501] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[502] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[502] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[503] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[503] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[504] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[504] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[505] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[505] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[506] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[506] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[507] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[507] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[508] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[508] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[509] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[509] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[510] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[510] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[511] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[511] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[512] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[512] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[513] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[513] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[514] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[514] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[515] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[515] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[516] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[516] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[517] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[517] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[518] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[518] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[519] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[519] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[520] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[520] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[521] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[521] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[522] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[522] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[523] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[523] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[524] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[524] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[525] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[525] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[526] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[526] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[527] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[527] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[528] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[528] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[529] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[529] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[530] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[530] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[531] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[531] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[532] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[532] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[533] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[533] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[534] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[534] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[535] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[535] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[536] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[536] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[537] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[537] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[538] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[538] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[539] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[539] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[540] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[540] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[541] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[541] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[542] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[542] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[543] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[543] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[544] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[544] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[545] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[545] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[546] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[546] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[547] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[547] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[548] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[548] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[549] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[549] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[550] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[550] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[551] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[551] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[552] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[552] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[553] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[553] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[554] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[554] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[555] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[555] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[556] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[556] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[557] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[557] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[558] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[558] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[559] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[559] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[560] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[560] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[561] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[561] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[562] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[562] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[563] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[563] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[564] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[564] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[565] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[565] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[566] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[566] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[567] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[567] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[568] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[568] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[569] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[569] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[570] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[570] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[571] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[571] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[572] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[572] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[573] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[573] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[574] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[574] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[575] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[575] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[576] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[576] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[577] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[577] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[578] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[578] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[579] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[579] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[580] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[580] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[581] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[581] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[582] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[582] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[583] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[583] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[584] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[584] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[585] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[585] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[586] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[586] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[587] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[587] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[588] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[588] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[589] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[589] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[590] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[590] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[591] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[591] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[592] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[592] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[593] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[593] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[594] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[594] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[595] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[595] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[596] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[596] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[597] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[597] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[598] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[598] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[599] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[599] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[600] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[600] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[601] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[601] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[602] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[602] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[603] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[603] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[604] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[604] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[605] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[605] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[606] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[606] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[607] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[607] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[608] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[608] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[609] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[609] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[610] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[610] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[611] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[611] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[612] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[612] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[613] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[613] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[614] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[614] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[615] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[615] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[616] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[616] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[617] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[617] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[618] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[618] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[619] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[619] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[620] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[620] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[621] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[621] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[622] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[622] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[623] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[623] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[624] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[624] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[625] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[625] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[626] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[626] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[627] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[627] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[628] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[628] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[629] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[629] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[630] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[630] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[631] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[631] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[632] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[632] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[633] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[633] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[634] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[634] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[635] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[635] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[636] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[636] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[637] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[637] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[638] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[638] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[639] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[639] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[640] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[640] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[641] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[641] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[642] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[642] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[643] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[643] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[644] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[644] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[645] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[645] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[646] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[646] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[647] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[647] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[648] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[648] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[649] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[649] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[650] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[650] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[651] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[651] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[652] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[652] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[653] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[653] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[654] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[654] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[655] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[655] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[656] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[656] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[657] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[657] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[658] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[658] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[659] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[659] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[660] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[660] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[661] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[661] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[662] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[662] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[663] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[663] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[664] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[664] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[665] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[665] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[666] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[666] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[667] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[667] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[668] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[668] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[669] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[669] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[670] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[670] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[671] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[671] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[672] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[672] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[673] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[673] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[674] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[674] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[675] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[675] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[676] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[676] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[677] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[677] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[678] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[678] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[679] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[679] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[680] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[680] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[681] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[681] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[682] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[682] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[683] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[683] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[684] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[684] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[685] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[685] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[686] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[686] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[687] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[687] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[688] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[688] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[689] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[689] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[690] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[690] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[691] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[691] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[692] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[692] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[693] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[693] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[694] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[694] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[695] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[695] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[696] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[696] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[697] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[697] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[698] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[698] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[699] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[699] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[700] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[700] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[701] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[701] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[702] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[702] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[703] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[703] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[704] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[704] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[705] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[705] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[706] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[706] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[707] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[707] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[708] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[708] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[709] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[709] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[710] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[710] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[711] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[711] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[712] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[712] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[713] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[713] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[714] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[714] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[715] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[715] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[716] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[716] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[717] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[717] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[718] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[718] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[719] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[719] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[720] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[720] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[721] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[721] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[722] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[722] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[723] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[723] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[724] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[724] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[725] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[725] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[726] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[726] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[727] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[727] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[728] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[728] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[729] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[729] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[730] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[730] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[731] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[731] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[732] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[732] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[733] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[733] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[734] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[734] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[735] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[735] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[736] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[736] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[737] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[737] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[738] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[738] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[739] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[739] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[740] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[740] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[741] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[741] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[742] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[742] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[743] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[743] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[744] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[744] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[745] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[745] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[746] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[746] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[747] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[747] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[748] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[748] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[749] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[749] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[750] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[750] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[751] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[751] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[752] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[752] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[753] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[753] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[754] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[754] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[755] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[755] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[756] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[756] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[757] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[757] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[758] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[758] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[759] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[759] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[760] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[760] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[761] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[761] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[762] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[762] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[763] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[763] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[764] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[764] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[765] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[765] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[766] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[766] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[767] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[767] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[768] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[768] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[769] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[769] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[770] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[770] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[771] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[771] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[772] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[772] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[773] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[773] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[774] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[774] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[775] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[775] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[776] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[776] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[777] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[777] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[778] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[778] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[779] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[779] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[780] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[780] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[781] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[781] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[782] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[782] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[783] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[783] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[784] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[784] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[785] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[785] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[786] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[786] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[787] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[787] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[788] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[788] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[789] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[789] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[790] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[790] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[791] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[791] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[792] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[792] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[793] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[793] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[794] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[794] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[795] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[795] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[796] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[796] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[797] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[797] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[798] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[798] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[799] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[799] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[800] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[800] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[801] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[801] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[802] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[802] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[803] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[803] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[804] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[804] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[805] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[805] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[806] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[806] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[807] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[807] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[808] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[808] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[809] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[809] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[810] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[810] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[811] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[811] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[812] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[812] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[813] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[813] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[814] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[814] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[815] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[815] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[816] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[816] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[817] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[817] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[818] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[818] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[819] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[819] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[820] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[820] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[821] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[821] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[822] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[822] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[823] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[823] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[824] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[824] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[825] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[825] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[826] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[826] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[827] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[827] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[828] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[828] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[829] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[829] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[830] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[830] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[831] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[831] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[832] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[832] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[833] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[833] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[834] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[834] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[835] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[835] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[836] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[836] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[837] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[837] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[838] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[838] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[839] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[839] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[840] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[840] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[841] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[841] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[842] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[842] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[843] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[843] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[844] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[844] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[845] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[845] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[846] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[846] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[847] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[847] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[848] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[848] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[849] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[849] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[850] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[850] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[851] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[851] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[852] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[852] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[853] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[853] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[854] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[854] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[855] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[855] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[856] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[856] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[857] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[857] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[858] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[858] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[859] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[859] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[860] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[860] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[861] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[861] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[862] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[862] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[863] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[863] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[864] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[864] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[865] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[865] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[866] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[866] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[867] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[867] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[868] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[868] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[869] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[869] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[870] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[870] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[871] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[871] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[872] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[872] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[873] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[873] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[874] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[874] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[875] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[875] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[876] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[876] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[877] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[877] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[878] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[878] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[879] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[879] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[880] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[880] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[881] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[881] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[882] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[882] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[883] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[883] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[884] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[884] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[885] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[885] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[886] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[886] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[887] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[887] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[888] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[888] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[889] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[889] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[890] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[890] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[891] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[891] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[892] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[892] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[893] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[893] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[894] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[894] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[895] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[895] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[896] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[896] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[897] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[897] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[898] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[898] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[899] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[899] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[900] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[900] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[901] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[901] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[902] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[902] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[903] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[903] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[904] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[904] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[905] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[905] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[906] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[906] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[907] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[907] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[908] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[908] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[909] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[909] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[910] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[910] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[911] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[911] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[912] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[912] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[913] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[913] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[914] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[914] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[915] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[915] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[916] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[916] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[917] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[917] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[918] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[918] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[919] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[919] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[920] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[920] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[921] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[921] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[922] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[922] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[923] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[923] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[924] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[924] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[925] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[925] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[926] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[926] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[927] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[927] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[928] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[928] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[929] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[929] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[930] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[930] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[931] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[931] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[932] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[932] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[933] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[933] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[934] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[934] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[935] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[935] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[936] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[936] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[937] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[937] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[938] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[938] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[939] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[939] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[940] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[940] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[941] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[941] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[942] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[942] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[943] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[943] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[944] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[944] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[945] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[945] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[946] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[946] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[947] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[947] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[948] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[948] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[949] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[949] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[950] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[950] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[951] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[951] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[952] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[952] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[953] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[953] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[954] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[954] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[955] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[955] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[956] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[956] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[957] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[957] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[958] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[958] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[959] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[959] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[960] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[960] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[961] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[961] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[962] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[962] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[963] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[963] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[964] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[964] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[965] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[965] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[966] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[966] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[967] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[967] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[968] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[968] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[969] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[969] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[970] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[970] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[971] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[971] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[972] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[972] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[973] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[973] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[974] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[974] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[975] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[975] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[976] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[976] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[977] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[977] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[978] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[978] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[979] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[979] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[980] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[980] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[981] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[981] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[982] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[982] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[983] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[983] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[984] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[984] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[985] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[985] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[986] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[986] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[987] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[987] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[988] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[988] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[989] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[989] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[990] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[990] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[991] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[991] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[992] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[992] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[993] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[993] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[994] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[994] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[995] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[995] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[996] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[996] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[997] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[997] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[998] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[998] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[999] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[999] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1000] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1000] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1001] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1001] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1002] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1002] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1003] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1003] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1004] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1004] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1005] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1005] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1006] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1006] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1007] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1007] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1008] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1008] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1009] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1009] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1010] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1010] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1011] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1011] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1012] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1012] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1013] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1013] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1014] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1014] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1015] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1015] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1016] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1016] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1017] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1017] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1018] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1018] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1019] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1019] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1020] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1020] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1021] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1021] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1022] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1022] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1023] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1023] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1024] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1024] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1025] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1025] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1026] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1026] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1027] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1027] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1028] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1028] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1029] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1029] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1030] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1030] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1031] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1031] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1032] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1032] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1033] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1033] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1034] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1034] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1035] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1035] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1036] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1036] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1037] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1037] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1038] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1038] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1039] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1039] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1040] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1040] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1041] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1041] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1042] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1042] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1043] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1043] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1044] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1044] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1045] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1045] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1046] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1046] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1047] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1047] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1048] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1048] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1049] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1049] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1050] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1050] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1051] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1051] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1052] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1052] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1053] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1053] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1054] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1054] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1055] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1055] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1056] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1056] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1057] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1057] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1058] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1058] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1059] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1059] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1060] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1060] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1061] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1061] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1062] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1062] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1063] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1063] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1064] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1064] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1065] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1065] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1066] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1066] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1067] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1067] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1068] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1068] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1069] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1069] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1070] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1070] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1071] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1071] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1072] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1072] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1073] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1073] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1074] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1074] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1075] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1075] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1076] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1076] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1077] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1077] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1078] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1078] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1079] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1079] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1080] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1080] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1081] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1081] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1082] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1082] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1083] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1083] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1084] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1084] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1085] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1085] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1086] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1086] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1087] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1087] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1088] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1088] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1089] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1089] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1090] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1090] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1091] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1091] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1092] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1092] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1093] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1093] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1094] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1094] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1095] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1095] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1096] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1096] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1097] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1097] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1098] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1098] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1099] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1099] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1100] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1100] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1101] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1101] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1102] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1102] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1103] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1103] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1104] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1104] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1105] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1105] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1106] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1106] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1107] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1107] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1108] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1108] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1109] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1109] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1110] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1110] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1111] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1111] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1112] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1112] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1113] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1113] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1114] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1114] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1115] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1115] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1116] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1116] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1117] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1117] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1118] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1118] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1119] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1119] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1120] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1120] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1121] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1121] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1122] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1122] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1123] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1123] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1124] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1124] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1125] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1125] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1126] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1126] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1127] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1127] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1128] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1128] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1129] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1129] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1130] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1130] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1131] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1131] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1132] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1132] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1133] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1133] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1134] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1134] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1135] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1135] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1136] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1136] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1137] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1137] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1138] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1138] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1139] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1139] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1140] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1140] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1141] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1141] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1142] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1142] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1143] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1143] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1144] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1144] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1145] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1145] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1146] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1146] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1147] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1147] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1148] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1148] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1149] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1149] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1150] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1150] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1151] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1151] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1152] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1152] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1153] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1153] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1154] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1154] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1155] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1155] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1156] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1156] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1157] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1157] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1158] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1158] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1159] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1159] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1160] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1160] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1161] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1161] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1162] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1162] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1163] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1163] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1164] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1164] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1165] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1165] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1166] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1166] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1167] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1167] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1168] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1168] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1169] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1169] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1170] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1170] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1171] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1171] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1172] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1172] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1173] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1173] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1174] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1174] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1175] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1175] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1176] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1176] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1177] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1177] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1178] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1178] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1179] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1179] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1180] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1180] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1181] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1181] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1182] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1182] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1183] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1183] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1184] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1184] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1185] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1185] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1186] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1186] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1187] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1187] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1188] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1188] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1189] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1189] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1190] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1190] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1191] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1191] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1192] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1192] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1193] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1193] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1194] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1194] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1195] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1195] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1196] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1196] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1197] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1197] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1198] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1198] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1199] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1199] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1200] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1200] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1201] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1201] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1202] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1202] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1203] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1203] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1204] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1204] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1205] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1205] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1206] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1206] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1207] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1207] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1208] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1208] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1209] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1209] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1210] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1210] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1211] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1211] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1212] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1212] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1213] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1213] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1214] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1214] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1215] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1215] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1216] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1216] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1217] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1217] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1218] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1218] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1219] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1219] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1220] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1220] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1221] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1221] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1222] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1222] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1223] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1223] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1224] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1224] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1225] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1225] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1226] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1226] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1227] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1227] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1228] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1228] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1229] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1229] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1230] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1230] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1231] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1231] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1232] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1232] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1233] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1233] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1234] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1234] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1235] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1235] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1236] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1236] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1237] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1237] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1238] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1238] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1239] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1239] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1240] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1240] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1241] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1241] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1242] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1242] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1243] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1243] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1244] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1244] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1245] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1245] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1246] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1246] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1247] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1247] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1248] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1248] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1249] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1249] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1250] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1250] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1251] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1251] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1252] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1252] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1253] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1253] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1254] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1254] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1255] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1255] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1256] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1256] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1257] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1257] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1258] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1258] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1259] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1259] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1260] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1260] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1261] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1261] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1262] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1262] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1263] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1263] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1264] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1264] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1265] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1265] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1266] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1266] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1267] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1267] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1268] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1268] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1269] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1269] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1270] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1270] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1271] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1271] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1272] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1272] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1273] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1273] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1274] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1274] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1275] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1275] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1276] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1276] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1277] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1277] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1278] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1278] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1279] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1279] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1280] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1280] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1281] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1281] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1282] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1282] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1283] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1283] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1284] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1284] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1285] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1285] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1286] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1286] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1287] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1287] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1288] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1288] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1289] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1289] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1290] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1290] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1291] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1291] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1292] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1292] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1293] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1293] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1294] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1294] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1295] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1295] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1296] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1296] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1297] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1297] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1298] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1298] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1299] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1299] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1300] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1300] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1301] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1301] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1302] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1302] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1303] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1303] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1304] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1304] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1305] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1305] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1306] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1306] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1307] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1307] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1308] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1308] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1309] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1309] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1310] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1310] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1311] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1311] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1312] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1312] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1313] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1313] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1314] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1314] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1315] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1315] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1316] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1316] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1317] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1317] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1318] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1318] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1319] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1319] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1320] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1320] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1321] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1321] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1322] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1322] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1323] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1323] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1324] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1324] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1325] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1325] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1326] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1326] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1327] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1327] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1328] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1328] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1329] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1329] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1330] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1330] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1331] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1331] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1332] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1332] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1333] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1333] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1334] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1334] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1335] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1335] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1336] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1336] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1337] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1337] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1338] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1338] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1339] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1339] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1340] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1340] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1341] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1341] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1342] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1342] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1343] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1343] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1344] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1344] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1345] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1345] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1346] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1346] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1347] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1347] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1348] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1348] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1349] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1349] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1350] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1350] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1351] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1351] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1352] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1352] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1353] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1353] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1354] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1354] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1355] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1355] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1356] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1356] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1357] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1357] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1358] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1358] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1359] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1359] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1360] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1360] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1361] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1361] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1362] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1362] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1363] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1363] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1364] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1364] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1365] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1365] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1366] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1366] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1367] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1367] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1368] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1368] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1369] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1369] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1370] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1370] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1371] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1371] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1372] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1372] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1373] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1373] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1374] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1374] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1375] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1375] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1376] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1376] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1377] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1377] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1378] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1378] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1379] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1379] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1380] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1380] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1381] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1381] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1382] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1382] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1383] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1383] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1384] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1384] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1385] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1385] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1386] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1386] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1387] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1387] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1388] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1388] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1389] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1389] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1390] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1390] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1391] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1391] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1392] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1392] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1393] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1393] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1394] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1394] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1395] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1395] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1396] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1396] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1397] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1397] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1398] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1398] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1399] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1399] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1400] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1400] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1401] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1401] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1402] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1402] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1403] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1403] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1404] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1404] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1405] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1405] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1406] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1406] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1407] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1407] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1408] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1408] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1409] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1409] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1410] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1410] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1411] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1411] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1412] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1412] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1413] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1413] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1414] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1414] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1415] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1415] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1416] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1416] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1417] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1417] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1418] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1418] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1419] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1419] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1420] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1420] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1421] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1421] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1422] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1422] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1423] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1423] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1424] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1424] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1425] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1425] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1426] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1426] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1427] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1427] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1428] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1428] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1429] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1429] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1430] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1430] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1431] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1431] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1432] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1432] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1433] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1433] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1434] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1434] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1435] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1435] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1436] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1436] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1437] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1437] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1438] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1438] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1439] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1439] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1440] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1440] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1441] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1441] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1442] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1442] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1443] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1443] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1444] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1444] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1445] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1445] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1446] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1446] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1447] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1447] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1448] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1448] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1449] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1449] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1450] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1450] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1451] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1451] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1452] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1452] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1453] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1453] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1454] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1454] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1455] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1455] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1456] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1456] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1457] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1457] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1458] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1458] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1459] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1459] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1460] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1460] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1461] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1461] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1462] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1462] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1463] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1463] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1464] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1464] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1465] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1465] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1466] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1466] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1467] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1467] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1468] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1468] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1469] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1469] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1470] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1470] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1471] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1471] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1472] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1472] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1473] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1473] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1474] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1474] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1475] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1475] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1476] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1476] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1477] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1477] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1478] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1478] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1479] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1479] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1480] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1480] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1481] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1481] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1482] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1482] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1483] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1483] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1484] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1484] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1485] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1485] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1486] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1486] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1487] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1487] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1488] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1488] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1489] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1489] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1490] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1490] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1491] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1491] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1492] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1492] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1493] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1493] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1494] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1494] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1495] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1495] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1496] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1496] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1497] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1497] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1498] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1498] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1499] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1499] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1500] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1500] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1501] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1501] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1502] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1502] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1503] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1503] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1504] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1504] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1505] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1505] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1506] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1506] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1507] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1507] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1508] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1508] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1509] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1509] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1510] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1510] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1511] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1511] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1512] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1512] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1513] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1513] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1514] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1514] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1515] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1515] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1516] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1516] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1517] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1517] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1518] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1518] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1519] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1519] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1520] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1520] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1521] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1521] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1522] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1522] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1523] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1523] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1524] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1524] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1525] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1525] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1526] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1526] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1527] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1527] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1528] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1528] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1529] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1529] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1530] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1530] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1531] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1531] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1532] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1532] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1533] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1533] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1534] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1534] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1535] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1535] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1536] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1536] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1537] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1537] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1538] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1538] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1539] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1539] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1540] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1540] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1541] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1541] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1542] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1542] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1543] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1543] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1544] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1544] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1545] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1545] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1546] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1546] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1547] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1547] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1548] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1548] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1549] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1549] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1550] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1550] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1551] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1551] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1552] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1552] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1553] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1553] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1554] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1554] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1555] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1555] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1556] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1556] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1557] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1557] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1558] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1558] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1559] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1559] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1560] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1560] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1561] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1561] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1562] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1562] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1563] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1563] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1564] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1564] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1565] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1565] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1566] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1566] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1567] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1567] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1568] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1568] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1569] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1569] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1570] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1570] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1571] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1571] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1572] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1572] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1573] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1573] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1574] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1574] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1575] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1575] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1576] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1576] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1577] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1577] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1578] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1578] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1579] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1579] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1580] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1580] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1581] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1581] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1582] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1582] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1583] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1583] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1584] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1584] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1585] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1585] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1586] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1586] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1587] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1587] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1588] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1588] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1589] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1589] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1590] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1590] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1591] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1591] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1592] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1592] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1593] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1593] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1594] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1594] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1595] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1595] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1596] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1596] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1597] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1597] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1598] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1598] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1599] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1599] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1600] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1600] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1601] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1601] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1602] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1602] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1603] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1603] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1604] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1604] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1605] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1605] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1606] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1606] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1607] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1607] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1608] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1608] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1609] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1609] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1610] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1610] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1611] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1611] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1612] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1612] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1613] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1613] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1614] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1614] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1615] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1615] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1616] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1616] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1617] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1617] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1618] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1618] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1619] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1619] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1620] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1620] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1621] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1621] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1622] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1622] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1623] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1623] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1624] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1624] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1625] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1625] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1626] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1626] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1627] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1627] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1628] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1628] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1629] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1629] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1630] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1630] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1631] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1631] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1632] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1632] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1633] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1633] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1634] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1634] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1635] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1635] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1636] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1636] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1637] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1637] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1638] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1638] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1639] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1639] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1640] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1640] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1641] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1641] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1642] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1642] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1643] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1643] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1644] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1644] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1645] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1645] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1646] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1646] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1647] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1647] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1648] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1648] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1649] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1649] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1650] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1650] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1651] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1651] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1652] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1652] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1653] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1653] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1654] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1654] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1655] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1655] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1656] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1656] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1657] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1657] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1658] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1658] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1659] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1659] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1660] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1660] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1661] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1661] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1662] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1662] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1663] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1663] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1664] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1664] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1665] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1665] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1666] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1666] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1667] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1667] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1668] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1668] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1669] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1669] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1670] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1670] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1671] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1671] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1672] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1672] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1673] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1673] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1674] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1674] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1675] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1675] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1676] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1676] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1677] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1677] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1678] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1678] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1679] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1679] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1680] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1680] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1681] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1681] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1682] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1682] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1683] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1683] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1684] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1684] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1685] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1685] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1686] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1686] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1687] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1687] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1688] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1688] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1689] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1689] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1690] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1690] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1691] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1691] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1692] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1692] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1693] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1693] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1694] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1694] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1695] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1695] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1696] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1696] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1697] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1697] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1698] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1698] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1699] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1699] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1700] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1700] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1701] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1701] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1702] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1702] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1703] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1703] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1704] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1704] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1705] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1705] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1706] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1706] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1707] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1707] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1708] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1708] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1709] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1709] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1710] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1710] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1711] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1711] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1712] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1712] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1713] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1713] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1714] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1714] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1715] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1715] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1716] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1716] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1717] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1717] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1718] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1718] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1719] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1719] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1720] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1720] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1721] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1721] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1722] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1722] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1723] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1723] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1724] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1724] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1725] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1725] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1726] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1726] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1727] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1727] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1728] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1728] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1729] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1729] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1730] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1730] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1731] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1731] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1732] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1732] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1733] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1733] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1734] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1734] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1735] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1735] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1736] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1736] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1737] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1737] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1738] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1738] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1739] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1739] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1740] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1740] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1741] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1741] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1742] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1742] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1743] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1743] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1744] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1744] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1745] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1745] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1746] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1746] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1747] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1747] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1748] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1748] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1749] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1749] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1750] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1750] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1751] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1751] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1752] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1752] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1753] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1753] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1754] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1754] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1755] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1755] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1756] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1756] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1757] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1757] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1758] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1758] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1759] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1759] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1760] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1760] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1761] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1761] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1762] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1762] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1763] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1763] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1764] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1764] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1765] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1765] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1766] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1766] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1767] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1767] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1768] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1768] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1769] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1769] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1770] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1770] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1771] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1771] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1772] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1772] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1773] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1773] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1774] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1774] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1775] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1775] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1776] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1776] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1777] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1777] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1778] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1778] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1779] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1779] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1780] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1780] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1781] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1781] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1782] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1782] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1783] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1783] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1784] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1784] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1785] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1785] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1786] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1786] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1787] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1787] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1788] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1788] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1789] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1789] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1790] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1790] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1791] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1791] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1792] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1792] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1793] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1793] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1794] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1794] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1795] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1795] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1796] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1796] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1797] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1797] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1798] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1798] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1799] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1799] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1800] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1800] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1801] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1801] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1802] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1802] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1803] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1803] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1804] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1804] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1805] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1805] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1806] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1806] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1807] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1807] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1808] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1808] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1809] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1809] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1810] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1810] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1811] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1811] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1812] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1812] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1813] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1813] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1814] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1814] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1815] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1815] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1816] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1816] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1817] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1817] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1818] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1818] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1819] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1819] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1820] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1820] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1821] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1821] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1822] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1822] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1823] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1823] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1824] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1824] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1825] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1825] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1826] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1826] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1827] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1827] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1828] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1828] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1829] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1829] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1830] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1830] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1831] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1831] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1832] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1832] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1833] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1833] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1834] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1834] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1835] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1835] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1836] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1836] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1837] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1837] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1838] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1838] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1839] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1839] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1840] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1840] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1841] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1841] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1842] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1842] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1843] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1843] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1844] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1844] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1845] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1845] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1846] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1846] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1847] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1847] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1848] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1848] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1849] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1849] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1850] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1850] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1851] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1851] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1852] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1852] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1853] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1853] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1854] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1854] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1855] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1855] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1856] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1856] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1857] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1857] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1858] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1858] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1859] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1859] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1860] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1860] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1861] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1861] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1862] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1862] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1863] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1863] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1864] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1864] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1865] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1865] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1866] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1866] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1867] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1867] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1868] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1868] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1869] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1869] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1870] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1870] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1871] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1871] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1872] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1872] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1873] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1873] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1874] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1874] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1875] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1875] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1876] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1876] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1877] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1877] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1878] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1878] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1879] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1879] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1880] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1880] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1881] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1881] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1882] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1882] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1883] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1883] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1884] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1884] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1885] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1885] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1886] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1886] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1887] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1887] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1888] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1888] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1889] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1889] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1890] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1890] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1891] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1891] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1892] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1892] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1893] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1893] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1894] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1894] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1895] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1895] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1896] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1896] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1897] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1897] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1898] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1898] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1899] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1899] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1900] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1900] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1901] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1901] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1902] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1902] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1903] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1903] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1904] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1904] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1905] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1905] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1906] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1906] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1907] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1907] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1908] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1908] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1909] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1909] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1910] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1910] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1911] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1911] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1912] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1912] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1913] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1913] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1914] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1914] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1915] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1915] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1916] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1916] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1917] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1917] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1918] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1918] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1919] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1919] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1920] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1920] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1921] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1921] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1922] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1922] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1923] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1923] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1924] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1924] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1925] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1925] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1926] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1926] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1927] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1927] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1928] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1928] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1929] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1929] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1930] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1930] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1931] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1931] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1932] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1932] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1933] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1933] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1934] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1934] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1935] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1935] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1936] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1936] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1937] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1937] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1938] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1938] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1939] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1939] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1940] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1940] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1941] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1941] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1942] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1942] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1943] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1943] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1944] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1944] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1945] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1945] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1946] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1946] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1947] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1947] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1948] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1948] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1949] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1949] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1950] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1950] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1951] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1951] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1952] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1952] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1953] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1953] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1954] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1954] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1955] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1955] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1956] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1956] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1957] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1957] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1958] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1958] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1959] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1959] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1960] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1960] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1961] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1961] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1962] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1962] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1963] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1963] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1964] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1964] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1965] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1965] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1966] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1966] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1967] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1967] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1968] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1968] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1969] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1969] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1970] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1970] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1971] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1971] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1972] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1972] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1973] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1973] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1974] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1974] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1975] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1975] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1976] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1976] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1977] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1977] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1978] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1978] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1979] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1979] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1980] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1980] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1981] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1981] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1982] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1982] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1983] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1983] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1984] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1984] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1985] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1985] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1986] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1986] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1987] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1987] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1988] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1988] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1989] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1989] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1990] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1990] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1991] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1991] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1992] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1992] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1993] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1993] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1994] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1994] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1995] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1995] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1996] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1996] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1997] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1997] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1998] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1998] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1999] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[1999] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2000] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2000] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2001] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2001] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2002] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2002] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2003] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2003] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2004] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2004] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2005] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2005] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2006] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2006] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2007] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2007] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2008] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2008] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2009] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2009] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2010] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2010] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2011] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2011] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2012] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2012] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2013] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2013] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2014] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2014] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2015] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2015] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2016] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2016] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2017] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2017] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2018] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2018] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2019] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2019] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2020] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2020] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2021] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2021] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2022] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2022] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2023] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2023] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2024] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2024] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2025] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2025] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2026] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2026] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2027] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2027] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2028] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2028] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2029] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2029] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2030] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2030] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2031] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2031] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2032] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2032] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2033] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2033] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2034] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2034] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2035] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2035] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2036] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2036] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2037] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2037] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2038] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2038] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2039] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2039] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2040] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2040] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2041] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2041] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2042] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2042] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2043] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2043] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2044] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2044] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2045] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2045] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2046] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2046] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2047] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2047] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2048] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2048] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2049] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2049] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2050] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2050] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2051] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2051] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2052] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2052] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2053] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2053] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2054] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2054] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2055] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2055] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2056] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2056] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2057] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2057] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2058] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2058] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2059] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2059] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2060] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2060] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2061] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2061] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2062] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2062] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2063] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2063] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2064] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2064] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2065] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2065] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2066] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2066] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2067] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2067] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2068] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2068] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2069] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2069] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2070] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2070] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2071] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2071] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2072] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2072] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2073] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2073] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2074] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2074] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2075] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2075] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2076] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2076] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2077] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2077] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2078] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2078] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2079] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2079] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2080] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2080] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2081] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2081] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2082] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2082] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2083] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2083] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2084] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2084] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2085] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2085] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2086] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2086] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2087] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2087] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2088] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2088] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2089] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2089] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2090] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2090] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2091] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2091] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2092] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2092] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2093] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2093] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2094] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2094] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2095] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2095] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2096] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2096] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2097] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2097] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2098] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2098] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2099] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2099] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2100] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2100] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2101] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2101] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2102] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2102] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2103] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2103] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2104] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2104] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2105] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2105] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2106] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2106] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2107] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2107] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2108] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2108] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2109] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2109] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2110] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2110] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2111] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2111] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2112] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2112] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2113] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2113] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2114] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2114] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2115] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2115] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2116] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2116] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2117] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2117] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2118] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2118] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2119] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2119] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2120] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2120] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2121] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2121] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2122] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2122] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2123] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2123] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2124] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2124] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2125] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2125] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2126] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2126] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2127] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2127] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2128] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2128] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2129] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2129] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2130] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2130] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2131] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2131] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2132] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2132] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2133] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2133] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2134] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2134] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2135] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2135] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2136] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2136] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2137] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2137] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2138] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2138] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2139] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2139] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2140] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2140] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2141] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2141] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2142] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2142] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2143] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2143] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2144] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2144] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2145] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2145] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2146] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2146] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2147] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2147] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2148] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2148] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2149] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2149] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2150] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2150] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2151] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2151] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2152] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2152] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2153] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2153] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2154] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2154] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2155] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2155] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2156] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2156] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2157] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2157] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2158] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2158] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2159] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2159] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2160] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2160] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2161] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2161] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2162] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2162] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2163] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2163] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2164] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2164] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2165] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2165] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2166] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2166] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2167] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2167] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2168] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2168] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2169] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2169] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2170] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2170] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2171] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2171] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2172] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2172] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2173] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2173] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2174] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2174] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2175] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2175] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2176] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2176] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2177] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2177] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2178] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2178] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2179] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2179] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2180] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2180] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2181] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2181] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2182] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2182] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2183] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2183] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2184] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2184] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2185] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2185] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2186] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2186] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2187] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2187] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2188] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2188] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2189] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2189] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2190] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2190] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2191] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2191] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2192] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2192] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2193] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2193] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2194] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2194] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2195] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2195] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2196] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2196] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2197] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2197] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2198] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2198] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2199] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2199] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2200] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2200] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2201] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2201] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2202] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2202] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2203] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2203] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2204] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2204] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2205] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2205] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2206] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2206] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2207] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2207] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2208] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2208] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2209] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2209] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2210] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2210] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2211] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2211] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2212] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2212] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2213] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2213] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2214] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2214] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2215] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2215] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2216] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2216] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2217] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2217] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2218] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2218] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2219] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2219] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2220] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2220] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2221] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2221] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2222] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2222] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2223] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2223] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2224] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2224] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2225] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2225] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2226] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2226] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2227] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2227] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2228] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2228] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2229] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2229] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2230] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2230] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2231] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2231] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2232] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2232] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2233] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2233] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2234] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2234] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2235] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2235] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2236] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2236] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2237] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2237] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2238] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2238] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2239] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2239] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2240] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2240] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2241] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2241] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2242] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2242] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2243] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2243] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2244] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2244] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2245] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2245] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2246] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2246] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2247] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2247] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2248] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2248] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2249] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2249] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2250] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2250] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2251] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2251] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2252] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2252] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2253] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2253] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2254] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2254] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2255] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2255] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2256] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2256] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2257] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2257] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2258] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2258] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2259] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2259] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2260] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2260] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2261] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2261] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2262] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2262] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2263] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2263] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2264] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2264] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2265] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2265] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2266] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2266] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2267] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2267] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2268] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2268] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2269] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2269] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2270] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2270] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2271] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2271] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2272] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2272] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2273] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2273] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2274] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2274] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2275] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2275] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2276] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2276] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2277] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2277] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2278] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2278] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2279] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2279] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2280] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2280] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2281] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2281] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2282] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2282] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2283] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2283] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2284] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2284] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2285] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2285] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2286] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2286] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2287] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2287] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2288] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2288] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2289] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2289] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2290] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2290] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2291] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2291] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2292] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2292] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2293] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2293] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2294] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2294] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2295] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2295] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2296] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2296] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2297] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2297] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2298] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2298] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2299] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2299] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2300] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2300] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2301] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2301] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2302] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2302] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2303] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2303] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2304] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2304] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2305] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2305] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2306] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2306] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2307] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2307] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2308] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2308] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2309] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2309] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2310] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2310] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2311] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2311] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2312] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2312] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2313] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2313] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2314] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2314] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2315] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2315] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2316] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2316] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2317] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2317] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2318] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2318] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2319] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2319] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2320] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2320] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2321] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2321] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2322] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2322] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2323] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2323] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2324] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2324] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2325] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2325] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2326] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2326] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2327] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2327] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2328] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2328] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2329] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2329] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2330] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2330] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2331] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2331] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2332] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2332] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2333] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2333] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2334] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2334] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2335] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2335] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2336] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2336] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2337] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2337] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2338] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2338] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2339] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2339] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2340] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2340] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2341] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2341] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2342] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2342] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2343] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2343] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2344] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2344] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2345] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2345] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2346] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2346] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2347] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2347] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2348] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2348] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2349] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2349] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2350] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2350] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2351] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2351] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2352] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2352] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2353] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2353] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2354] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2354] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2355] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2355] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2356] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2356] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2357] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2357] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2358] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2358] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2359] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2359] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2360] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2360] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2361] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2361] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2362] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2362] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2363] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2363] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2364] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2364] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2365] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2365] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2366] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2366] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2367] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2367] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2368] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2368] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2369] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2369] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2370] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2370] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2371] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2371] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2372] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2372] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2373] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2373] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2374] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2374] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2375] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2375] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2376] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2376] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2377] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2377] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2378] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2378] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2379] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2379] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2380] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2380] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2381] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2381] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2382] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2382] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2383] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2383] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2384] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2384] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2385] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2385] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2386] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2386] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2387] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2387] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2388] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2388] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2389] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2389] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2390] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2390] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2391] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2391] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2392] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2392] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2393] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2393] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2394] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2394] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2395] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2395] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2396] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2396] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2397] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2397] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2398] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2398] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2399] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2399] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2400] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2400] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2401] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2401] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2402] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2402] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2403] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2403] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2404] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2404] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2405] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2405] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2406] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2406] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2407] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2407] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2408] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2408] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2409] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2409] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2410] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2410] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2411] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2411] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2412] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2412] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2413] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2413] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2414] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2414] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2415] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2415] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2416] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2416] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2417] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2417] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2418] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2418] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2419] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2419] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2420] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2420] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2421] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2421] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2422] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2422] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2423] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2423] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2424] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2424] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2425] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2425] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2426] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2426] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2427] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2427] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2428] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2428] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2429] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2429] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2430] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2430] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2431] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2431] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2432] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2432] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2433] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2433] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2434] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2434] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2435] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2435] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2436] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2436] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2437] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2437] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2438] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2438] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2439] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2439] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2440] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2440] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2441] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2441] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2442] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2442] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2443] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2443] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2444] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2444] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2445] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2445] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2446] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2446] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2447] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2447] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2448] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2448] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2449] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2449] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2450] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2450] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2451] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2451] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2452] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2452] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2453] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2453] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2454] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2454] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2455] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2455] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2456] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2456] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2457] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2457] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2458] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2458] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2459] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2459] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2460] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2460] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2461] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2461] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2462] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2462] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2463] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2463] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2464] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2464] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2465] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2465] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2466] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2466] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2467] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2467] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2468] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2468] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2469] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2469] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2470] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2470] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2471] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2471] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2472] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2472] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2473] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2473] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2474] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2474] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2475] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2475] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2476] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2476] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2477] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2477] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2478] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2478] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2479] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2479] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2480] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2480] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2481] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2481] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2482] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2482] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2483] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2483] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2484] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2484] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2485] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2485] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2486] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2486] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2487] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2487] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2488] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2488] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2489] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2489] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2490] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2490] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2491] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2491] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2492] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2492] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2493] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2493] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2494] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2494] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2495] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2495] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2496] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2496] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2497] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2497] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2498] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2498] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2499] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2499] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2500] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2500] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2501] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2501] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2502] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2502] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2503] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2503] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2504] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2504] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2505] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2505] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2506] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2506] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2507] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2507] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2508] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2508] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2509] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2509] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2510] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2510] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2511] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2511] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2512] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2512] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2513] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2513] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2514] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2514] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2515] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2515] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2516] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2516] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2517] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2517] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2518] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2518] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2519] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2519] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2520] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2520] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2521] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2521] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2522] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2522] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2523] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2523] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2524] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2524] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2525] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2525] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2526] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2526] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2527] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2527] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2528] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2528] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2529] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2529] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2530] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2530] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2531] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2531] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2532] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2532] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2533] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2533] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2534] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2534] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2535] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2535] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2536] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2536] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2537] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2537] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2538] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2538] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2539] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2539] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2540] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2540] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2541] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2541] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2542] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2542] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2543] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2543] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2544] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2544] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2545] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2545] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2546] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2546] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2547] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2547] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2548] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2548] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2549] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2549] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2550] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2550] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2551] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2551] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2552] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2552] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2553] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2553] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2554] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2554] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2555] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2555] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2556] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2556] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2557] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2557] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2558] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2558] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2559] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2559] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2560] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2560] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2561] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2561] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2562] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2562] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2563] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2563] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2564] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2564] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2565] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2565] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2566] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2566] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2567] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2567] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2568] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2568] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2569] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2569] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2570] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2570] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2571] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2571] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2572] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2572] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2573] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2573] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2574] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2574] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2575] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2575] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2576] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2576] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2577] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2577] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2578] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2578] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2579] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2579] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2580] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2580] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2581] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2581] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2582] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2582] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2583] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2583] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2584] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2584] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2585] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2585] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2586] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2586] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2587] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2587] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2588] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2588] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2589] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2589] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2590] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2590] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2591] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2591] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2592] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2592] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2593] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2593] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2594] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2594] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2595] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2595] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2596] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2596] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2597] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2597] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2598] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2598] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2599] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2599] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2600] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2600] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2601] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2601] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2602] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2602] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2603] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2603] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2604] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2604] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2605] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2605] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2606] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2606] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2607] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2607] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2608] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2608] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2609] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2609] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2610] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2610] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2611] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2611] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2612] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2612] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2613] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2613] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2614] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2614] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2615] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2615] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2616] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2616] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2617] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2617] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2618] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2618] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2619] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2619] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2620] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2620] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2621] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2621] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2622] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2622] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2623] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2623] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2624] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2624] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2625] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2625] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2626] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2626] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2627] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2627] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2628] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2628] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2629] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2629] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2630] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2630] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2631] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2631] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2632] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2632] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2633] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2633] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2634] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2634] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2635] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2635] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2636] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2636] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2637] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2637] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2638] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2638] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2639] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2639] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2640] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2640] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2641] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2641] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2642] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2642] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2643] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2643] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2644] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2644] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2645] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2645] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2646] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2646] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2647] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2647] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2648] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2648] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2649] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2649] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2650] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2650] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2651] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2651] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2652] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2652] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2653] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2653] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2654] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2654] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2655] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2655] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2656] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2656] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2657] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2657] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2658] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2658] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2659] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2659] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2660] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2660] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2661] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2661] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2662] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2662] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2663] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2663] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2664] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2664] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2665] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2665] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2666] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2666] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2667] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2667] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2668] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2668] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2669] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2669] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2670] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2670] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2671] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2671] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2672] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2672] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2673] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2673] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2674] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2674] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2675] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2675] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2676] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2676] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2677] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2677] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2678] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2678] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2679] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2679] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2680] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2680] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2681] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2681] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2682] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2682] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2683] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2683] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2684] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2684] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2685] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2685] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2686] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2686] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2687] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2687] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2688] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2688] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2689] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2689] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2690] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2690] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2691] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2691] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2692] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2692] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2693] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2693] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2694] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2694] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2695] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2695] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2696] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2696] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2697] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2697] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2698] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2698] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2699] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2699] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2700] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2700] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2701] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2701] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2702] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2702] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2703] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2703] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2704] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2704] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2705] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2705] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2706] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2706] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2707] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2707] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2708] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2708] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2709] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2709] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2710] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2710] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2711] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2711] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2712] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2712] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2713] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2713] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2714] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2714] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2715] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2715] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2716] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2716] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2717] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2717] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2718] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2718] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2719] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2719] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2720] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2720] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2721] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2721] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2722] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2722] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2723] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2723] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2724] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2724] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2725] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2725] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2726] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2726] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2727] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2727] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2728] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2728] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2729] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2729] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2730] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2730] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2731] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2731] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2732] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2732] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2733] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2733] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2734] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2734] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2735] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2735] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2736] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2736] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2737] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2737] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2738] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2738] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2739] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2739] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2740] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2740] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2741] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2741] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2742] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2742] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2743] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2743] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2744] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2744] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2745] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2745] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2746] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2746] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2747] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2747] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2748] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2748] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2749] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2749] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2750] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2750] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2751] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2751] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2752] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2752] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2753] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2753] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2754] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2754] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2755] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2755] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2756] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2756] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2757] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2757] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2758] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2758] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2759] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2759] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2760] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2760] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2761] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2761] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2762] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2762] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2763] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2763] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2764] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2764] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2765] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2765] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2766] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2766] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2767] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2767] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2768] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2768] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2769] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2769] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2770] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2770] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2771] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2771] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2772] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2772] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2773] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2773] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2774] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2774] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2775] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2775] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2776] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2776] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2777] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2777] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2778] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2778] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2779] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2779] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2780] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2780] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2781] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2781] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2782] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2782] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2783] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2783] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2784] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2784] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2785] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2785] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2786] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2786] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2787] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2787] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2788] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2788] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2789] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2789] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2790] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2790] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2791] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2791] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2792] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2792] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2793] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2793] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2794] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2794] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2795] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2795] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2796] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2796] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2797] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2797] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2798] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2798] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2799] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2799] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2800] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2800] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2801] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2801] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2802] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2802] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2803] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2803] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2804] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2804] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2805] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2805] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2806] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2806] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2807] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2807] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2808] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2808] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2809] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2809] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2810] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2810] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2811] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2811] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2812] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2812] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2813] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2813] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2814] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2814] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2815] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2815] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2816] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2816] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2817] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2817] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2818] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2818] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2819] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2819] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2820] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2820] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2821] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2821] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2822] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2822] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2823] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2823] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2824] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2824] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2825] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2825] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2826] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2826] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2827] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2827] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2828] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2828] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2829] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2829] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2830] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2830] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2831] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2831] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2832] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2832] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2833] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2833] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2834] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2834] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2835] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2835] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2836] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2836] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2837] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2837] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2838] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2838] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2839] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2839] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2840] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2840] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2841] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2841] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2842] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2842] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2843] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2843] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2844] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2844] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2845] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2845] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2846] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2846] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2847] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2847] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2848] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2848] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2849] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2849] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2850] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2850] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2851] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2851] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2852] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2852] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2853] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2853] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2854] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2854] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2855] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2855] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2856] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2856] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2857] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2857] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2858] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2858] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2859] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2859] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2860] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2860] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2861] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2861] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2862] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2862] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2863] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2863] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2864] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2864] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2865] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2865] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2866] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2866] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2867] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2867] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2868] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2868] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2869] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2869] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2870] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2870] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2871] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2871] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2872] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2872] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2873] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2873] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2874] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2874] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2875] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2875] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2876] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2876] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2877] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2877] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2878] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2878] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2879] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2879] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2880] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2880] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2881] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2881] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2882] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2882] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2883] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2883] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2884] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2884] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2885] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2885] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2886] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2886] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2887] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2887] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2888] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2888] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2889] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2889] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2890] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2890] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2891] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2891] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2892] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2892] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2893] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2893] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2894] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2894] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2895] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2895] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2896] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2896] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2897] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2897] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2898] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2898] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2899] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2899] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2900] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2900] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2901] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2901] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2902] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2902] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2903] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2903] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2904] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2904] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2905] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2905] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2906] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2906] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2907] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2907] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2908] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2908] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2909] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2909] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2910] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2910] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2911] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2911] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2912] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2912] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2913] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2913] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2914] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2914] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2915] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2915] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2916] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2916] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2917] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2917] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2918] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2918] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2919] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2919] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2920] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2920] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2921] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2921] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2922] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2922] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2923] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2923] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2924] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2924] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2925] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2925] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2926] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2926] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2927] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2927] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2928] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2928] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2929] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2929] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2930] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2930] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2931] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2931] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2932] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2932] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2933] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2933] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2934] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2934] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2935] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2935] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2936] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2936] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2937] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2937] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2938] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2938] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2939] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2939] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2940] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2940] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2941] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2941] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2942] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2942] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2943] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2943] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2944] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2944] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2945] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2945] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2946] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2946] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2947] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2947] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2948] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2948] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2949] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2949] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2950] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2950] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2951] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2951] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2952] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2952] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2953] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2953] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2954] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2954] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2955] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2955] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2956] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2956] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2957] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2957] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2958] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2958] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2959] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2959] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2960] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2960] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2961] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2961] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2962] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2962] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2963] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2963] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2964] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2964] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2965] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2965] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2966] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2966] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2967] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2967] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2968] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2968] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2969] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2969] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2970] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2970] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2971] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2971] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2972] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2972] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2973] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2973] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2974] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2974] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2975] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2975] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2976] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2976] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2977] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2977] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2978] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2978] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2979] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2979] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2980] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2980] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2981] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2981] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2982] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2982] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2983] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2983] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2984] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2984] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2985] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2985] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2986] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2986] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2987] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2987] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2988] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2988] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2989] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2989] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2990] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2990] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2991] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2991] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2992] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2992] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2993] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2993] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2994] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2994] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2995] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2995] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2996] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2996] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2997] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2997] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2998] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2998] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2999] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[2999] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3000] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3000] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3001] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3001] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3002] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3002] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3003] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3003] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3004] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3004] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3005] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3005] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3006] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3006] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3007] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3007] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3008] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3008] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3009] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3009] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3010] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3010] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3011] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3011] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3012] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3012] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3013] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3013] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3014] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3014] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3015] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3015] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3016] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3016] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3017] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3017] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3018] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3018] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3019] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3019] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3020] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3020] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3021] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3021] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3022] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3022] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3023] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3023] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3024] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3024] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3025] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3025] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3026] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3026] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3027] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3027] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3028] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3028] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3029] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3029] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3030] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3030] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3031] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3031] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3032] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3032] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3033] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3033] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3034] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3034] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3035] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3035] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3036] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3036] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3037] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3037] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3038] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3038] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3039] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3039] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3040] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3040] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3041] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3041] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3042] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3042] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3043] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3043] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3044] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3044] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3045] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3045] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3046] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3046] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3047] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3047] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3048] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3048] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3049] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3049] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3050] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3050] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3051] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3051] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3052] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3052] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3053] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3053] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3054] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3054] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3055] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3055] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3056] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3056] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3057] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3057] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3058] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3058] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3059] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3059] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3060] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3060] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3061] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3061] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3062] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3062] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3063] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3063] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3064] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3064] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3065] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3065] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3066] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3066] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3067] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3067] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3068] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3068] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3069] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3069] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3070] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3070] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3071] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3071] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3072] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3072] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3073] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3073] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3074] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3074] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3075] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3075] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3076] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3076] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3077] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3077] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3078] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3078] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3079] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3079] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3080] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3080] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3081] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3081] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3082] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3082] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3083] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3083] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3084] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3084] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3085] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3085] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3086] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3086] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3087] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3087] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3088] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3088] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3089] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3089] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3090] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3090] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3091] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3091] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3092] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3092] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3093] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3093] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3094] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3094] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3095] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3095] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3096] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3096] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3097] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3097] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3098] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3098] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3099] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3099] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3100] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3100] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3101] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3101] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3102] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3102] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3103] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3103] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3104] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3104] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3105] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3105] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3106] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3106] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3107] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3107] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3108] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3108] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3109] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3109] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3110] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3110] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3111] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3111] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3112] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3112] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3113] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3113] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3114] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3114] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3115] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3115] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3116] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3116] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3117] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3117] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3118] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3118] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3119] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3119] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3120] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3120] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3121] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3121] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3122] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3122] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3123] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3123] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3124] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3124] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3125] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3125] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3126] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3126] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3127] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3127] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3128] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3128] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3129] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3129] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3130] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3130] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3131] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3131] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3132] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3132] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3133] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3133] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3134] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3134] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3135] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3135] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3136] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3136] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3137] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3137] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3138] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3138] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3139] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3139] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3140] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3140] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3141] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3141] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3142] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3142] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3143] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3143] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3144] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3144] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3145] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3145] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3146] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3146] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3147] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3147] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3148] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3148] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3149] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3149] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3150] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3150] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3151] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3151] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3152] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3152] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3153] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3153] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3154] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3154] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3155] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3155] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3156] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3156] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3157] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3157] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3158] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3158] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3159] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3159] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3160] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3160] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3161] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3161] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3162] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3162] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3163] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3163] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3164] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3164] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3165] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3165] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3166] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3166] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3167] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3167] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3168] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3168] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3169] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3169] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3170] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3170] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3171] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3171] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3172] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3172] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3173] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3173] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3174] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3174] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3175] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3175] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3176] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3176] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3177] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3177] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3178] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3178] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3179] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3179] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3180] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3180] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3181] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3181] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3182] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3182] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3183] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3183] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3184] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3184] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3185] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3185] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3186] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3186] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3187] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3187] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3188] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3188] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3189] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3189] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3190] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3190] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3191] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3191] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3192] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3192] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3193] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3193] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3194] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3194] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3195] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3195] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3196] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3196] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3197] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3197] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3198] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3198] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3199] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3199] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3200] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3200] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3201] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3201] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3202] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3202] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3203] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3203] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3204] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3204] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3205] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3205] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3206] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3206] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3207] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3207] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3208] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3208] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3209] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3209] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3210] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3210] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3211] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3211] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3212] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3212] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3213] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3213] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3214] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3214] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3215] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3215] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3216] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3216] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3217] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3217] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3218] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3218] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3219] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3219] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3220] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3220] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3221] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3221] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3222] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3222] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3223] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3223] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3224] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3224] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3225] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3225] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3226] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3226] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3227] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3227] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3228] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3228] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3229] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3229] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3230] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3230] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3231] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3231] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3232] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3232] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3233] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3233] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3234] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3234] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3235] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3235] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3236] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3236] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3237] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3237] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3238] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3238] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3239] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3239] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3240] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3240] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3241] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3241] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3242] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3242] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3243] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3243] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3244] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3244] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3245] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3245] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3246] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3246] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3247] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3247] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3248] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3248] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3249] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3249] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3250] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3250] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3251] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3251] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3252] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3252] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3253] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3253] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3254] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3254] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3255] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3255] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3256] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3256] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3257] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3257] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3258] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3258] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3259] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3259] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3260] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3260] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3261] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3261] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3262] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3262] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3263] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3263] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3264] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3264] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3265] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3265] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3266] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3266] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3267] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3267] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3268] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3268] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3269] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3269] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3270] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3270] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3271] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3271] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3272] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3272] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3273] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3273] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3274] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3274] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3275] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3275] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3276] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3276] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3277] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3277] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3278] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3278] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3279] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3279] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3280] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3280] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3281] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3281] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3282] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3282] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3283] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3283] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3284] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3284] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3285] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3285] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3286] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3286] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3287] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3287] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3288] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3288] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3289] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3289] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3290] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3290] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3291] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3291] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3292] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3292] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3293] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3293] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3294] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3294] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3295] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3295] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3296] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3296] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3297] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3297] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3298] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3298] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3299] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3299] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3300] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3300] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3301] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3301] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3302] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3302] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3303] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3303] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3304] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3304] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3305] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3305] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3306] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3306] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3307] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3307] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3308] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3308] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3309] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3309] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3310] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3310] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3311] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3311] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3312] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3312] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3313] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3313] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3314] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3314] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3315] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3315] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3316] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3316] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3317] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3317] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3318] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3318] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3319] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3319] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3320] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3320] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3321] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3321] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3322] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3322] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3323] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3323] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3324] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3324] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3325] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3325] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3326] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3326] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3327] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3327] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3328] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3328] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3329] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3329] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3330] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3330] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3331] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3331] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3332] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3332] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3333] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3333] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3334] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3334] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3335] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3335] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3336] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3336] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3337] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3337] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3338] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3338] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3339] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3339] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3340] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3340] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3341] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3341] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3342] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3342] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3343] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3343] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3344] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3344] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3345] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3345] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3346] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3346] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3347] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3347] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3348] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3348] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3349] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3349] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3350] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3350] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3351] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3351] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3352] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3352] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3353] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3353] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3354] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3354] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3355] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3355] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3356] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3356] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3357] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3357] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3358] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3358] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3359] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3359] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3360] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3360] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3361] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3361] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3362] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3362] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3363] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3363] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3364] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3364] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3365] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3365] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3366] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3366] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3367] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3367] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3368] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3368] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3369] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3369] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3370] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3370] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3371] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3371] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3372] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3372] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3373] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3373] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3374] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3374] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3375] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3375] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3376] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3376] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3377] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3377] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3378] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3378] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3379] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3379] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3380] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3380] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3381] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3381] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3382] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3382] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3383] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3383] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3384] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3384] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3385] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3385] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3386] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3386] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3387] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3387] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3388] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3388] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3389] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3389] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3390] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3390] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3391] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3391] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3392] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3392] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3393] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3393] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3394] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3394] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3395] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3395] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3396] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3396] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3397] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3397] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3398] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3398] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3399] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3399] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3400] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3400] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3401] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3401] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3402] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3402] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3403] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3403] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3404] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3404] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3405] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3405] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3406] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3406] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3407] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3407] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3408] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3408] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3409] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3409] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3410] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3410] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3411] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3411] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3412] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3412] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3413] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3413] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3414] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3414] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3415] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3415] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3416] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3416] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3417] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3417] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3418] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3418] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3419] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3419] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3420] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3420] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3421] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3421] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3422] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3422] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3423] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3423] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3424] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3424] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3425] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3425] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3426] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3426] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3427] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3427] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3428] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3428] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3429] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3429] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3430] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3430] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3431] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3431] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3432] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3432] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3433] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3433] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3434] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3434] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3435] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3435] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3436] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3436] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3437] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3437] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3438] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3438] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3439] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3439] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3440] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3440] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3441] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3441] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3442] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3442] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3443] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3443] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3444] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3444] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3445] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3445] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3446] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3446] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3447] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3447] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3448] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3448] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3449] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3449] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3450] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3450] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3451] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3451] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3452] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3452] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3453] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3453] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3454] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3454] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3455] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3455] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3456] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3456] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3457] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3457] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3458] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3458] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3459] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3459] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3460] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3460] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3461] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3461] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3462] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3462] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3463] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3463] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3464] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3464] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3465] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3465] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3466] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3466] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3467] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3467] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3468] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3468] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3469] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3469] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3470] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3470] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3471] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3471] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3472] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3472] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3473] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3473] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3474] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3474] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3475] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3475] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3476] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3476] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3477] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3477] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3478] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3478] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3479] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3479] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3480] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3480] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3481] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3481] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3482] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3482] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3483] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3483] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3484] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3484] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3485] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3485] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3486] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3486] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3487] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3487] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3488] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3488] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3489] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3489] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3490] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3490] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3491] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3491] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3492] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3492] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3493] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3493] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3494] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3494] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3495] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3495] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3496] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3496] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3497] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3497] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3498] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3498] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3499] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3499] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3500] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3500] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3501] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3501] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3502] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3502] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3503] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3503] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3504] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3504] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3505] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3505] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3506] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3506] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3507] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3507] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3508] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3508] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3509] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3509] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3510] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3510] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3511] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3511] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3512] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3512] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3513] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3513] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3514] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3514] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3515] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3515] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3516] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3516] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3517] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3517] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3518] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3518] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3519] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3519] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3520] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3520] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3521] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3521] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3522] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3522] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3523] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3523] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3524] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3524] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3525] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3525] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3526] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3526] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3527] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3527] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3528] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3528] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3529] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3529] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3530] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3530] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3531] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3531] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3532] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3532] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3533] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3533] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3534] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3534] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3535] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3535] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3536] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3536] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3537] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3537] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3538] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3538] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3539] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3539] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3540] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3540] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3541] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3541] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3542] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3542] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3543] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3543] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3544] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3544] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3545] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3545] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3546] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3546] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3547] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3547] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3548] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3548] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3549] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3549] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3550] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3550] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3551] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3551] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3552] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3552] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3553] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3553] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3554] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3554] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3555] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3555] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3556] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3556] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3557] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3557] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3558] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3558] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3559] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3559] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3560] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3560] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3561] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3561] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3562] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3562] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3563] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3563] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3564] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3564] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3565] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3565] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3566] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3566] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3567] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3567] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3568] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3568] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3569] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3569] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3570] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3570] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3571] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3571] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3572] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3572] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3573] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3573] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3574] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3574] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3575] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3575] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3576] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3576] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3577] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3577] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3578] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3578] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3579] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3579] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3580] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3580] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3581] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3581] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3582] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3582] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3583] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3583] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3584] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3584] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3585] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3585] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3586] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3586] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3587] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3587] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3588] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3588] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3589] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3589] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3590] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3590] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3591] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3591] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3592] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3592] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3593] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3593] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3594] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3594] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3595] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3595] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3596] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3596] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3597] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3597] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3598] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3598] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3599] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3599] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3600] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3600] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3601] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3601] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3602] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3602] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3603] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3603] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3604] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3604] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3605] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3605] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3606] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3606] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3607] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3607] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3608] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3608] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3609] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3609] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3610] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3610] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3611] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3611] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3612] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3612] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3613] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3613] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3614] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3614] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3615] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3615] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3616] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3616] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3617] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3617] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3618] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3618] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3619] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3619] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3620] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3620] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3621] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3621] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3622] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3622] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3623] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3623] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3624] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3624] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3625] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3625] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3626] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3626] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3627] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3627] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3628] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3628] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3629] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3629] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3630] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3630] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3631] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3631] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3632] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3632] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3633] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3633] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3634] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3634] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3635] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3635] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3636] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3636] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3637] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3637] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3638] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3638] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3639] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3639] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3640] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3640] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3641] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3641] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3642] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3642] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3643] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3643] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3644] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3644] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3645] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3645] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3646] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3646] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3647] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3647] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3648] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3648] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3649] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3649] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3650] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3650] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3651] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3651] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3652] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3652] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3653] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3653] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3654] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3654] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3655] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3655] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3656] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3656] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3657] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3657] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3658] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3658] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3659] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3659] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3660] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3660] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3661] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3661] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3662] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3662] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3663] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3663] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3664] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3664] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3665] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3665] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3666] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3666] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3667] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3667] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3668] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3668] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3669] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3669] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3670] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3670] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3671] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3671] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3672] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3672] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3673] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3673] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3674] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3674] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3675] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3675] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3676] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3676] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3677] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3677] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3678] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3678] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3679] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3679] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3680] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3680] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3681] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3681] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3682] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3682] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3683] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3683] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3684] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3684] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3685] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3685] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3686] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3686] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3687] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3687] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3688] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3688] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3689] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3689] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3690] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3690] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3691] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3691] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3692] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3692] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3693] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3693] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3694] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3694] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3695] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3695] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3696] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3696] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3697] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3697] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3698] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3698] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3699] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3699] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3700] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3700] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3701] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3701] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3702] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3702] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3703] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3703] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3704] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3704] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3705] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3705] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3706] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3706] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3707] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3707] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3708] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3708] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3709] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3709] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3710] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3710] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3711] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3711] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3712] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3712] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3713] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3713] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3714] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3714] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3715] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3715] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3716] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3716] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3717] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3717] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3718] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3718] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3719] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3719] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3720] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3720] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3721] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3721] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3722] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3722] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3723] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3723] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3724] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3724] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3725] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3725] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3726] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3726] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3727] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3727] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3728] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3728] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3729] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3729] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3730] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3730] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3731] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3731] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3732] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3732] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3733] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3733] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3734] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3734] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3735] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3735] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3736] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3736] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3737] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3737] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3738] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3738] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3739] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3739] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3740] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3740] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3741] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3741] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3742] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3742] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3743] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3743] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3744] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3744] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3745] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3745] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3746] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3746] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3747] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3747] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3748] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3748] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3749] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3749] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3750] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3750] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3751] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3751] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3752] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3752] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3753] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3753] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3754] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3754] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3755] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3755] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3756] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3756] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3757] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3757] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3758] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3758] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3759] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3759] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3760] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3760] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3761] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3761] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3762] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3762] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3763] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3763] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3764] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3764] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3765] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3765] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3766] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3766] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3767] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3767] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3768] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3768] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3769] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3769] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3770] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3770] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3771] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3771] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3772] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3772] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3773] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3773] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3774] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3774] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3775] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3775] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3776] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3776] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3777] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3777] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3778] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3778] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3779] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3779] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3780] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3780] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3781] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3781] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3782] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3782] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3783] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3783] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3784] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3784] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3785] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3785] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3786] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3786] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3787] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3787] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3788] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3788] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3789] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3789] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3790] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3790] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3791] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3791] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3792] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3792] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3793] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3793] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3794] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3794] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3795] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3795] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3796] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3796] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3797] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3797] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3798] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3798] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3799] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3799] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3800] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3800] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3801] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3801] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3802] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3802] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3803] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3803] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3804] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3804] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3805] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3805] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3806] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3806] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3807] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3807] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3808] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3808] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3809] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3809] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3810] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3810] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3811] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3811] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3812] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3812] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3813] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3813] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3814] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3814] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3815] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3815] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3816] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3816] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3817] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3817] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3818] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3818] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3819] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3819] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3820] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3820] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3821] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3821] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3822] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3822] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3823] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3823] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3824] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3824] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3825] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3825] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3826] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3826] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3827] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3827] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3828] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3828] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3829] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3829] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3830] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3830] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3831] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3831] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3832] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3832] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3833] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3833] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3834] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3834] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3835] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3835] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3836] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3836] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3837] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3837] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3838] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3838] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3839] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3839] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3840] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3840] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3841] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3841] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3842] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3842] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3843] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3843] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3844] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3844] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3845] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3845] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3846] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3846] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3847] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3847] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3848] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3848] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3849] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3849] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3850] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3850] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3851] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3851] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3852] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3852] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3853] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3853] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3854] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3854] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3855] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3855] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3856] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3856] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3857] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3857] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3858] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3858] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3859] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3859] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3860] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3860] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3861] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3861] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3862] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3862] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3863] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3863] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3864] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3864] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3865] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3865] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3866] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3866] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3867] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3867] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3868] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3868] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3869] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3869] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3870] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3870] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3871] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3871] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3872] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3872] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3873] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3873] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3874] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3874] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3875] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3875] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3876] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3876] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3877] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3877] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3878] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3878] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3879] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3879] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3880] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3880] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3881] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3881] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3882] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3882] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3883] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3883] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3884] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3884] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3885] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3885] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3886] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3886] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3887] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3887] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3888] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3888] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3889] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3889] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3890] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3890] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3891] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3891] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3892] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3892] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3893] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3893] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3894] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3894] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3895] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3895] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3896] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3896] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3897] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3897] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3898] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3898] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3899] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3899] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3900] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3900] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3901] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3901] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3902] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3902] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3903] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3903] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3904] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3904] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3905] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3905] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3906] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3906] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3907] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3907] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3908] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3908] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3909] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3909] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3910] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3910] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3911] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3911] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3912] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3912] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3913] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3913] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3914] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3914] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3915] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3915] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3916] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3916] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3917] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3917] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3918] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3918] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3919] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3919] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3920] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3920] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3921] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3921] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3922] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3922] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3923] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3923] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3924] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3924] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3925] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3925] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3926] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3926] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3927] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3927] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3928] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3928] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3929] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3929] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3930] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3930] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3931] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3931] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3932] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3932] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3933] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3933] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3934] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3934] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3935] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3935] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3936] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3936] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3937] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3937] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3938] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3938] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3939] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3939] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3940] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3940] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3941] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3941] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3942] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3942] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3943] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3943] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3944] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3944] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3945] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3945] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3946] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3946] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3947] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3947] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3948] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3948] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3949] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3949] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3950] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3950] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3951] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3951] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3952] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3952] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3953] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3953] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3954] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3954] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3955] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3955] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3956] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3956] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3957] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3957] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3958] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3958] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3959] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3959] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3960] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3960] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3961] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3961] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3962] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3962] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3963] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3963] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3964] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3964] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3965] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3965] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3966] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3966] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3967] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3967] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3968] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3968] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3969] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3969] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3970] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3970] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3971] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3971] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3972] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3972] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3973] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3973] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3974] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3974] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3975] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3975] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3976] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3976] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3977] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3977] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3978] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3978] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3979] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3979] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3980] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3980] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3981] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3981] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3982] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3982] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3983] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3983] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3984] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3984] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3985] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3985] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3986] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3986] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3987] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3987] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3988] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3988] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3989] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3989] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3990] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3990] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3991] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3991] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3992] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3992] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3993] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3993] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3994] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3994] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3995] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3995] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3996] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3996] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3997] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3997] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3998] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3998] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3999] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[3999] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4000] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4000] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4001] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4001] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4002] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4002] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4003] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4003] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4004] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4004] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4005] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4005] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4006] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4006] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4007] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4007] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4008] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4008] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4009] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4009] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4010] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4010] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4011] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4011] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4012] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4012] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4013] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4013] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4014] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4014] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4015] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4015] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4016] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4016] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4017] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4017] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4018] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4018] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4019] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4019] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4020] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4020] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4021] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4021] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4022] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4022] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4023] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4023] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4024] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4024] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4025] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4025] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4026] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4026] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4027] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4027] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4028] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4028] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4029] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4029] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4030] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4030] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4031] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4031] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4032] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4032] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4033] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4033] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4034] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4034] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4035] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4035] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4036] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4036] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4037] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4037] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4038] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4038] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4039] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4039] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4040] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4040] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4041] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4041] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4042] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4042] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4043] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4043] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4044] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4044] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4045] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4045] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4046] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4046] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4047] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4047] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4048] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4048] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4049] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4049] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4050] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4050] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4051] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4051] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4052] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4052] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4053] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4053] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4054] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4054] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4055] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4055] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4056] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4056] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4057] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4057] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4058] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4058] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4059] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4059] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4060] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4060] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4061] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4061] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4062] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4062] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4063] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4063] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4064] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4064] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4065] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4065] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4066] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4066] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4067] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4067] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4068] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4068] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4069] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4069] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4070] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4070] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4071] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4071] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4072] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4072] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4073] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4073] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4074] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4074] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4075] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4075] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4076] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4076] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4077] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4077] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4078] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4078] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4079] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4079] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4080] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4080] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4081] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4081] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4082] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4082] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4083] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4083] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4084] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4084] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4085] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4085] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4086] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4086] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4087] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4087] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4088] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4088] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4089] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4089] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4090] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4090] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4091] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4091] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4092] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4092] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4093] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4093] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4094] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4094] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4095] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4095] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4096] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4096] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4097] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4097] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4098] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4098] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4099] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4099] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4100] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4100] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4101] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4101] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4102] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4102] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4103] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4103] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4104] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4104] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4105] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4105] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4106] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4106] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4107] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4107] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4108] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4108] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4109] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4109] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4110] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4110] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4111] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4111] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4112] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4112] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4113] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4113] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4114] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4114] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4115] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4115] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4116] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4116] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4117] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4117] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4118] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4118] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4119] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4119] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4120] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4120] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4121] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4121] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4122] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4122] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4123] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4123] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4124] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4124] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4125] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4125] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4126] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4126] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4127] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4127] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4128] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4128] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4129] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4129] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4130] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4130] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4131] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4131] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4132] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4132] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4133] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4133] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4134] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4134] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4135] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4135] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4136] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4136] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4137] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4137] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4138] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4138] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4139] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4139] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4140] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4140] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4141] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4141] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4142] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4142] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4143] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4143] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4144] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4144] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4145] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4145] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4146] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4146] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4147] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4147] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4148] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4148] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4149] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4149] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4150] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4150] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4151] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4151] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4152] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4152] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4153] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4153] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4154] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4154] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4155] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4155] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4156] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4156] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4157] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4157] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4158] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4158] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4159] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4159] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4160] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4160] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4161] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4161] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4162] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4162] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4163] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4163] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4164] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4164] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4165] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4165] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4166] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4166] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4167] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4167] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4168] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4168] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4169] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4169] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4170] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4170] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4171] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4171] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4172] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4172] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4173] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4173] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4174] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4174] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4175] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4175] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4176] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4176] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4177] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4177] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4178] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4178] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4179] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4179] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4180] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4180] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4181] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4181] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4182] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4182] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4183] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4183] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4184] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4184] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4185] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4185] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4186] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4186] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4187] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4187] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4188] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4188] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4189] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4189] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4190] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4190] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4191] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4191] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4192] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4192] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4193] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4193] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4194] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4194] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4195] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4195] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4196] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4196] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4197] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4197] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4198] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4198] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4199] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4199] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4200] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4200] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4201] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4201] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4202] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4202] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4203] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4203] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4204] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4204] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4205] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4205] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4206] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4206] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4207] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4207] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4208] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4208] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4209] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4209] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4210] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4210] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4211] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4211] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4212] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4212] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4213] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4213] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4214] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4214] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4215] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4215] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4216] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4216] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4217] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4217] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4218] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4218] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4219] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4219] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4220] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4220] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4221] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4221] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4222] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4222] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4223] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4223] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4224] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4224] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4225] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4225] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4226] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4226] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4227] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4227] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4228] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4228] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4229] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4229] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4230] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4230] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4231] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4231] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4232] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4232] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4233] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4233] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4234] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4234] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4235] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4235] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4236] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4236] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4237] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4237] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4238] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4238] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4239] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4239] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4240] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4240] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4241] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4241] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4242] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4242] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4243] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4243] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4244] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4244] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4245] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4245] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4246] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4246] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4247] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4247] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4248] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4248] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4249] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4249] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4250] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4250] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4251] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4251] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4252] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4252] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4253] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4253] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4254] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4254] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4255] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4255] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4256] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4256] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4257] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4257] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4258] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4258] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4259] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4259] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4260] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4260] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4261] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4261] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4262] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4262] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4263] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4263] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4264] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4264] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4265] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4265] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4266] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4266] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4267] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4267] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4268] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4268] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4269] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4269] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4270] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4270] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4271] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4271] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4272] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4272] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4273] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4273] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4274] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4274] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4275] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4275] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4276] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4276] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4277] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4277] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4278] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4278] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4279] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4279] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4280] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4280] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4281] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4281] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4282] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4282] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4283] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4283] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4284] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4284] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4285] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4285] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4286] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4286] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4287] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4287] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4288] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4288] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4289] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4289] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4290] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4290] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4291] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4291] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4292] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4292] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4293] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4293] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4294] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4294] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4295] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4295] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4296] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4296] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4297] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4297] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4298] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4298] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4299] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4299] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4300] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4300] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4301] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4301] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4302] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4302] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4303] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4303] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4304] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4304] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4305] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4305] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4306] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4306] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4307] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4307] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4308] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4308] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4309] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4309] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4310] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4310] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4311] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4311] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4312] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4312] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4313] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4313] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4314] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4314] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4315] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4315] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4316] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4316] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4317] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4317] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4318] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4318] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4319] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4319] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4320] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4320] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4321] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4321] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4322] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4322] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4323] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4323] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4324] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4324] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4325] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4325] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4326] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4326] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4327] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4327] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4328] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4328] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4329] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4329] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4330] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4330] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4331] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4331] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4332] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4332] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4333] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4333] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4334] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4334] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4335] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4335] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4336] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4336] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4337] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4337] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4338] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4338] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4339] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4339] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4340] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4340] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4341] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4341] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4342] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4342] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4343] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4343] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4344] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4344] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4345] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4345] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4346] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4346] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4347] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4347] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4348] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4348] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4349] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4349] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4350] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4350] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4351] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4351] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4352] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4352] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4353] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4353] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4354] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4354] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4355] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4355] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4356] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4356] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4357] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4357] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4358] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4358] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4359] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4359] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4360] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4360] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4361] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4361] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4362] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4362] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4363] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4363] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4364] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4364] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4365] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4365] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4366] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4366] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4367] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4367] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4368] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4368] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4369] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4369] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4370] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4370] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4371] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4371] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4372] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4372] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4373] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4373] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4374] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4374] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4375] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4375] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4376] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4376] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4377] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4377] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4378] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4378] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4379] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4379] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4380] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4380] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4381] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4381] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4382] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4382] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4383] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4383] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4384] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4384] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4385] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4385] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4386] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4386] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4387] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4387] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4388] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4388] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4389] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4389] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4390] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4390] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4391] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4391] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4392] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4392] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4393] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4393] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4394] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4394] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4395] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4395] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4396] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4396] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4397] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4397] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4398] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4398] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4399] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4399] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4400] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4400] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4401] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4401] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4402] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4402] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4403] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4403] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4404] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4404] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4405] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4405] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4406] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4406] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4407] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4407] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4408] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4408] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4409] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4409] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4410] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4410] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4411] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4411] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4412] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4412] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4413] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4413] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4414] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4414] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4415] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4415] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4416] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4416] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4417] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4417] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4418] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4418] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4419] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4419] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4420] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4420] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4421] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4421] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4422] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4422] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4423] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4423] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4424] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4424] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4425] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4425] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4426] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4426] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4427] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4427] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4428] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4428] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4429] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4429] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4430] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4430] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4431] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4431] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4432] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4432] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4433] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4433] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4434] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4434] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4435] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4435] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4436] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4436] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4437] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4437] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4438] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4438] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4439] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4439] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4440] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4440] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4441] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4441] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4442] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4442] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4443] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4443] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4444] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4444] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4445] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4445] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4446] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4446] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4447] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4447] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4448] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4448] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4449] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4449] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4450] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4450] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4451] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4451] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4452] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4452] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4453] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4453] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4454] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4454] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4455] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4455] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4456] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4456] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4457] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4457] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4458] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4458] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4459] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4459] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4460] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4460] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4461] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4461] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4462] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4462] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4463] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4463] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4464] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4464] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4465] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4465] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4466] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4466] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4467] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4467] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4468] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4468] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4469] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4469] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4470] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4470] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4471] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4471] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4472] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4472] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4473] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4473] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4474] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4474] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4475] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4475] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4476] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4476] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4477] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4477] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4478] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4478] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4479] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4479] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4480] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4480] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4481] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4481] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4482] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4482] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4483] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4483] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4484] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4484] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4485] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4485] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4486] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4486] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4487] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4487] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4488] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4488] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4489] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4489] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4490] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4490] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4491] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4491] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4492] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4492] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4493] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4493] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4494] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4494] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4495] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4495] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4496] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4496] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4497] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4497] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4498] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4498] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4499] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4499] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4500] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4500] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4501] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4501] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4502] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4502] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4503] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4503] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4504] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4504] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4505] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4505] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4506] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4506] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4507] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4507] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4508] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4508] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4509] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4509] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4510] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4510] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4511] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4511] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4512] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4512] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4513] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4513] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4514] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4514] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4515] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4515] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4516] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4516] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4517] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4517] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4518] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4518] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4519] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4519] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4520] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4520] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4521] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4521] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4522] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4522] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4523] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4523] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4524] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4524] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4525] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4525] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4526] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4526] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4527] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4527] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4528] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4528] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4529] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4529] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4530] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4530] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4531] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4531] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4532] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4532] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4533] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4533] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4534] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4534] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4535] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4535] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4536] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4536] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4537] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4537] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4538] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4538] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4539] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4539] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4540] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4540] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4541] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4541] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4542] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4542] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4543] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4543] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4544] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4544] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4545] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4545] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4546] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4546] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4547] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4547] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4548] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4548] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4549] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4549] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4550] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4550] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4551] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4551] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4552] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4552] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4553] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4553] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4554] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4554] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4555] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4555] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4556] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4556] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4557] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4557] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4558] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4558] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4559] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4559] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4560] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4560] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4561] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4561] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4562] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4562] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4563] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4563] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4564] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4564] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4565] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4565] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4566] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4566] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4567] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4567] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4568] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4568] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4569] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4569] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4570] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4570] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4571] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4571] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4572] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4572] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4573] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4573] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4574] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4574] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4575] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4575] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4576] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4576] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4577] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4577] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4578] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4578] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4579] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4579] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4580] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4580] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4581] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4581] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4582] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4582] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4583] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4583] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4584] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4584] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4585] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4585] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4586] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4586] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4587] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4587] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4588] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4588] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4589] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4589] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4590] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4590] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4591] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4591] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4592] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4592] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4593] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4593] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4594] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4594] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4595] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4595] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4596] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4596] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4597] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4597] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4598] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4598] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4599] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4599] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4600] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4600] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4601] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4601] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4602] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4602] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4603] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4603] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4604] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4604] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4605] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4605] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4606] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4606] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4607] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4607] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4608] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4608] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4609] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4609] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4610] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4610] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4611] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4611] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4612] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4612] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4613] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4613] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4614] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4614] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4615] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4615] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4616] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4616] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4617] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4617] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4618] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4618] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4619] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4619] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4620] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4620] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4621] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4621] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4622] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4622] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4623] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4623] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4624] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4624] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4625] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4625] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4626] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4626] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4627] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4627] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4628] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4628] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4629] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4629] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4630] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4630] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4631] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4631] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4632] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4632] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4633] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4633] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4634] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4634] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4635] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4635] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4636] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4636] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4637] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4637] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4638] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4638] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4639] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4639] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4640] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4640] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4641] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4641] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4642] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4642] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4643] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4643] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4644] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4644] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4645] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4645] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4646] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4646] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4647] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4647] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4648] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4648] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4649] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4649] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4650] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4650] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4651] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4651] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4652] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4652] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4653] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4653] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4654] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4654] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4655] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4655] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4656] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4656] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4657] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4657] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4658] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4658] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4659] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4659] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4660] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4660] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4661] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4661] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4662] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4662] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4663] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4663] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4664] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4664] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4665] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4665] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4666] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4666] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4667] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4667] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4668] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4668] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4669] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4669] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4670] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4670] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4671] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4671] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4672] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4672] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4673] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4673] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4674] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4674] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4675] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4675] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4676] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4676] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4677] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4677] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4678] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4678] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4679] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4679] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4680] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4680] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4681] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4681] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4682] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4682] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4683] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4683] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4684] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4684] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4685] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4685] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4686] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4686] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4687] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4687] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4688] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4688] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4689] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4689] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4690] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4690] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4691] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4691] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4692] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4692] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4693] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4693] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4694] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4694] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4695] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4695] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4696] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4696] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4697] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4697] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4698] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4698] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4699] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4699] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4700] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4700] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4701] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4701] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4702] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4702] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4703] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4703] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4704] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4704] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4705] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4705] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4706] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4706] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4707] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4707] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4708] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4708] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4709] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4709] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4710] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4710] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4711] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4711] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4712] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4712] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4713] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4713] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4714] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4714] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4715] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4715] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4716] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4716] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4717] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4717] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4718] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4718] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4719] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4719] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4720] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4720] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4721] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4721] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4722] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4722] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4723] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4723] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4724] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4724] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4725] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4725] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4726] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4726] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4727] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4727] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4728] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4728] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4729] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4729] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4730] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4730] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4731] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4731] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4732] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4732] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4733] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4733] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4734] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4734] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4735] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4735] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4736] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4736] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4737] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4737] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4738] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4738] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4739] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4739] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4740] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4740] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4741] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4741] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4742] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4742] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4743] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4743] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4744] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4744] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4745] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4745] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4746] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4746] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4747] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4747] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4748] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4748] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4749] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4749] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4750] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4750] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4751] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4751] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4752] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4752] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4753] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4753] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4754] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4754] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4755] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4755] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4756] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4756] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4757] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4757] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4758] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4758] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4759] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4759] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4760] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4760] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4761] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4761] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4762] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4762] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4763] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4763] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4764] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4764] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4765] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4765] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4766] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4766] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4767] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4767] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4768] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4768] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4769] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4769] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4770] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4770] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4771] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4771] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4772] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4772] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4773] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4773] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4774] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4774] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4775] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4775] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4776] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4776] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4777] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4777] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4778] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4778] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4779] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4779] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4780] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4780] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4781] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4781] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4782] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4782] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4783] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4783] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4784] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4784] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4785] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4785] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4786] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4786] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4787] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4787] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4788] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4788] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4789] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4789] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4790] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4790] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4791] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4791] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4792] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4792] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4793] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4793] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4794] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4794] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4795] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4795] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4796] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4796] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4797] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4797] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4798] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4798] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4799] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4799] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4800] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4800] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4801] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4801] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4802] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4802] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4803] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4803] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4804] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4804] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4805] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4805] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4806] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4806] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4807] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4807] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4808] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4808] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4809] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4809] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4810] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4810] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4811] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4811] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4812] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4812] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4813] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4813] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4814] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4814] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4815] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4815] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4816] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4816] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4817] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4817] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4818] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4818] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4819] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4819] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4820] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4820] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4821] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4821] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4822] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4822] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4823] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4823] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4824] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4824] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4825] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4825] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4826] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4826] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4827] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4827] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4828] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4828] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4829] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4829] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4830] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4830] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4831] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4831] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4832] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4832] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4833] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4833] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4834] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4834] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4835] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4835] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4836] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4836] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4837] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4837] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4838] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4838] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4839] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4839] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4840] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4840] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4841] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4841] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4842] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4842] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4843] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4843] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4844] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4844] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4845] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4845] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4846] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4846] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4847] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4847] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4848] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4848] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4849] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4849] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4850] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4850] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4851] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4851] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4852] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4852] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4853] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4853] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4854] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4854] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4855] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4855] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4856] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4856] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4857] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4857] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4858] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4858] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4859] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4859] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4860] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4860] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4861] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4861] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4862] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4862] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4863] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4863] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4864] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4864] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4865] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4865] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4866] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4866] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4867] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4867] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4868] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4868] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4869] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4869] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4870] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4870] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4871] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4871] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4872] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4872] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4873] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4873] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4874] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4874] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4875] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4875] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4876] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4876] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4877] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4877] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4878] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4878] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4879] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4879] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4880] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4880] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4881] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4881] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4882] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4882] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4883] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4883] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4884] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4884] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4885] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4885] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4886] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4886] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4887] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4887] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4888] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4888] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4889] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4889] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4890] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4890] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4891] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4891] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4892] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4892] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4893] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4893] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4894] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4894] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4895] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4895] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4896] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4896] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4897] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4897] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4898] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4898] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4899] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4899] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4900] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4900] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4901] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4901] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4902] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4902] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4903] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4903] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4904] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4904] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4905] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4905] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4906] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4906] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4907] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4907] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4908] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4908] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4909] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4909] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4910] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4910] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4911] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4911] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4912] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4912] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4913] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4913] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4914] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4914] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4915] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4915] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4916] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4916] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4917] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4917] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4918] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4918] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4919] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4919] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4920] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4920] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4921] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4921] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4922] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4922] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4923] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4923] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4924] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4924] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4925] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4925] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4926] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4926] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4927] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4927] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4928] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4928] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4929] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4929] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4930] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4930] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4931] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4931] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4932] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4932] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4933] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4933] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4934] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4934] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4935] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4935] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4936] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4936] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4937] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4937] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4938] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4938] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4939] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4939] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4940] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4940] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4941] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4941] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4942] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4942] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4943] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4943] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4944] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4944] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4945] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4945] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4946] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4946] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4947] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4947] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4948] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4948] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4949] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4949] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4950] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4950] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4951] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4951] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4952] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4952] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4953] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4953] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4954] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4954] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4955] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4955] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4956] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4956] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4957] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4957] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4958] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4958] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4959] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4959] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4960] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4960] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4961] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4961] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4962] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4962] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4963] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4963] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4964] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4964] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4965] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4965] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4966] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4966] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4967] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4967] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4968] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4968] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4969] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4969] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4970] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4970] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4971] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4971] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4972] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4972] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4973] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4973] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4974] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4974] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4975] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4975] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4976] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4976] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4977] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4977] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4978] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4978] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4979] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4979] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4980] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4980] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4981] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4981] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4982] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4982] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4983] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4983] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4984] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4984] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4985] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4985] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4986] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4986] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4987] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4987] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4988] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4988] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4989] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4989] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4990] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4990] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4991] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4991] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4992] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4992] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4993] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4993] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4994] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4994] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4995] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4995] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4996] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4996] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4997] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4997] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4998] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4998] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4999] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[4999] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5000] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5000] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5001] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5001] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5002] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5002] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5003] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5003] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5004] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5004] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5005] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5005] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5006] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5006] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5007] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5007] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5008] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5008] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5009] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5009] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5010] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5010] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5011] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5011] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5012] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5012] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5013] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5013] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5014] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5014] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5015] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5015] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5016] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5016] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5017] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5017] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5018] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5018] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5019] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5019] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5020] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5020] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5021] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5021] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5022] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5022] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5023] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5023] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5024] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5024] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5025] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5025] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5026] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5026] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5027] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5027] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5028] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5028] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5029] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5029] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5030] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5030] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5031] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5031] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5032] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5032] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5033] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5033] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5034] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5034] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5035] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5035] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5036] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5036] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5037] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5037] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5038] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5038] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5039] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5039] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5040] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5040] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5041] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5041] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5042] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5042] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5043] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5043] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5044] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5044] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5045] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5045] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5046] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5046] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5047] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5047] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5048] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5048] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5049] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5049] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5050] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5050] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5051] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5051] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5052] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5052] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5053] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5053] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5054] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5054] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5055] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5055] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5056] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5056] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5057] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5057] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5058] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5058] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5059] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5059] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5060] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5060] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5061] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5061] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5062] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5062] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5063] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5063] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5064] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5064] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5065] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5065] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5066] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5066] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5067] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5067] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5068] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5068] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5069] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5069] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5070] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5070] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5071] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5071] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5072] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5072] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5073] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5073] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5074] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5074] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5075] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5075] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5076] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5076] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5077] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5077] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5078] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5078] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5079] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5079] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5080] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5080] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5081] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5081] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5082] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5082] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5083] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5083] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5084] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5084] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5085] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5085] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5086] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5086] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5087] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5087] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5088] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5088] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5089] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5089] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5090] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5090] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5091] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5091] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5092] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5092] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5093] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5093] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5094] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5094] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5095] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5095] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5096] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5096] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5097] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5097] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5098] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5098] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5099] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5099] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5100] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5100] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5101] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5101] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5102] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5102] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5103] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5103] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5104] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5104] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5105] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5105] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5106] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5106] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5107] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5107] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5108] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5108] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5109] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5109] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5110] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5110] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5111] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5111] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5112] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5112] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5113] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5113] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5114] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5114] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5115] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5115] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5116] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5116] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5117] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5117] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5118] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5118] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5119] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5119] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5120] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5120] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5121] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5121] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5122] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5122] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5123] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5123] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5124] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5124] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5125] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5125] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5126] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5126] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5127] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5127] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5128] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5128] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5129] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5129] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5130] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5130] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5131] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5131] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5132] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5132] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5133] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5133] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5134] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5134] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5135] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5135] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5136] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5136] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5137] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5137] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5138] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5138] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5139] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5139] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5140] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5140] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5141] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5141] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5142] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5142] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5143] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5143] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5144] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5144] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5145] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5145] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5146] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5146] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5147] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5147] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5148] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5148] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5149] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5149] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5150] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5150] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5151] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5151] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5152] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5152] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5153] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5153] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5154] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5154] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5155] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5155] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5156] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5156] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5157] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5157] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5158] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5158] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5159] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5159] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5160] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5160] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5161] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5161] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5162] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5162] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5163] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5163] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5164] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5164] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5165] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5165] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5166] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5166] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5167] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5167] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5168] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5168] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5169] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5169] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5170] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5170] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5171] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5171] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5172] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5172] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5173] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5173] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5174] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5174] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5175] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5175] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5176] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5176] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5177] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5177] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5178] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5178] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5179] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5179] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5180] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5180] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5181] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5181] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5182] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5182] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5183] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5183] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5184] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5184] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5185] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5185] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5186] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5186] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5187] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5187] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5188] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5188] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5189] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5189] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5190] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5190] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5191] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5191] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5192] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5192] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5193] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5193] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5194] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5194] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5195] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5195] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5196] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5196] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5197] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5197] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5198] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5198] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5199] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5199] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5200] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5200] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5201] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5201] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5202] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5202] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5203] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5203] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5204] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5204] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5205] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5205] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5206] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5206] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5207] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5207] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5208] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5208] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5209] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5209] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5210] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5210] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5211] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5211] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5212] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5212] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5213] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5213] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5214] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5214] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5215] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5215] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5216] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5216] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5217] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5217] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5218] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5218] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5219] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5219] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5220] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5220] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5221] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5221] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5222] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5222] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5223] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5223] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5224] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5224] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5225] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5225] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5226] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5226] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5227] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5227] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5228] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5228] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5229] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5229] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5230] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5230] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5231] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5231] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5232] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5232] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5233] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5233] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5234] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5234] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5235] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5235] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5236] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5236] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5237] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5237] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5238] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5238] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5239] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5239] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5240] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5240] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5241] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5241] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5242] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5242] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5243] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5243] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5244] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5244] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5245] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5245] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5246] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5246] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5247] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5247] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5248] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5248] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5249] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5249] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5250] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5250] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5251] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5251] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5252] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5252] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5253] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5253] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5254] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5254] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5255] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5255] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5256] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5256] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5257] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5257] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5258] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5258] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5259] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5259] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5260] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5260] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5261] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5261] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5262] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5262] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5263] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5263] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5264] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5264] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5265] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5265] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5266] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5266] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5267] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5267] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5268] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5268] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5269] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5269] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5270] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5270] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5271] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5271] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5272] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5272] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5273] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5273] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5274] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5274] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5275] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5275] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5276] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5276] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5277] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5277] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5278] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5278] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5279] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5279] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5280] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5280] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5281] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5281] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5282] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5282] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5283] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5283] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5284] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5284] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5285] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5285] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5286] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5286] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5287] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5287] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5288] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5288] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5289] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5289] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5290] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5290] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5291] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5291] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5292] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5292] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5293] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5293] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5294] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5294] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5295] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5295] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5296] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5296] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5297] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5297] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5298] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5298] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5299] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5299] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5300] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5300] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5301] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5301] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5302] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5302] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5303] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5303] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5304] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5304] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5305] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5305] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5306] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5306] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5307] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5307] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5308] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5308] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5309] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5309] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5310] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5310] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5311] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5311] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5312] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5312] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5313] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5313] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5314] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5314] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5315] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5315] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5316] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5316] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5317] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5317] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5318] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5318] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5319] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5319] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5320] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5320] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5321] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5321] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5322] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5322] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5323] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5323] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5324] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5324] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5325] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5325] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5326] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5326] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5327] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5327] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5328] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5328] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5329] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5329] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5330] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5330] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5331] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5331] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5332] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5332] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5333] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5333] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5334] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5334] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5335] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5335] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5336] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5336] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5337] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5337] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5338] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5338] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5339] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5339] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5340] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5340] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5341] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5341] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5342] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5342] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5343] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5343] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5344] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5344] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5345] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5345] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5346] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5346] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5347] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5347] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5348] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5348] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5349] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5349] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5350] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5350] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5351] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5351] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5352] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5352] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5353] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5353] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5354] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5354] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5355] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5355] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5356] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5356] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5357] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5357] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5358] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5358] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5359] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5359] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5360] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5360] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5361] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5361] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5362] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5362] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5363] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5363] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5364] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5364] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5365] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5365] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5366] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5366] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5367] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5367] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5368] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5368] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5369] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5369] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5370] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5370] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5371] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5371] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5372] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5372] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5373] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5373] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5374] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5374] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5375] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5375] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5376] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5376] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5377] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5377] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5378] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5378] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5379] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5379] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5380] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5380] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5381] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5381] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5382] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5382] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5383] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5383] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5384] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5384] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5385] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5385] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5386] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5386] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5387] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5387] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5388] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5388] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5389] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5389] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5390] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5390] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5391] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5391] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5392] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5392] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5393] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5393] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5394] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5394] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5395] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5395] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5396] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5396] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5397] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5397] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5398] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5398] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5399] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5399] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5400] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5400] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5401] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5401] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5402] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5402] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5403] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5403] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5404] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5404] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5405] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5405] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5406] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5406] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5407] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5407] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5408] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5408] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5409] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5409] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5410] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5410] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5411] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5411] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5412] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5412] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5413] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5413] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5414] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5414] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5415] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5415] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5416] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5416] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5417] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5417] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5418] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5418] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5419] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5419] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5420] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5420] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5421] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5421] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5422] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5422] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5423] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5423] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5424] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5424] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5425] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5425] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5426] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5426] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5427] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5427] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5428] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5428] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5429] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5429] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5430] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5430] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5431] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5431] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5432] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5432] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5433] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5433] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5434] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5434] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5435] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5435] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5436] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5436] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5437] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5437] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5438] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5438] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5439] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5439] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5440] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5440] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5441] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5441] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5442] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5442] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5443] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5443] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5444] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5444] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5445] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5445] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5446] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5446] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5447] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5447] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5448] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5448] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5449] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5449] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5450] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5450] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5451] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5451] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5452] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5452] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5453] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5453] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5454] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5454] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5455] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5455] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5456] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5456] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5457] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5457] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5458] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5458] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5459] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5459] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5460] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5460] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5461] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5461] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5462] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5462] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5463] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5463] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5464] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5464] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5465] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5465] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5466] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5466] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5467] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5467] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5468] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5468] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5469] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5469] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5470] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5470] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5471] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5471] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5472] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5472] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5473] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5473] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5474] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5474] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5475] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5475] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5476] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5476] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5477] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5477] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5478] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5478] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5479] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5479] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5480] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5480] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5481] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5481] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5482] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5482] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5483] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5483] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5484] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5484] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5485] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5485] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5486] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5486] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5487] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5487] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5488] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5488] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5489] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5489] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5490] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5490] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5491] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5491] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5492] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5492] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5493] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5493] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5494] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5494] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5495] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5495] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5496] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5496] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5497] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5497] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5498] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5498] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5499] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5499] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5500] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5500] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5501] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5501] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5502] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5502] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5503] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5503] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5504] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5504] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5505] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5505] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5506] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5506] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5507] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5507] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5508] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5508] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5509] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5509] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5510] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5510] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5511] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5511] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5512] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5512] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5513] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5513] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5514] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5514] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5515] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5515] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5516] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5516] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5517] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5517] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5518] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5518] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5519] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5519] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5520] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5520] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5521] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5521] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5522] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5522] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5523] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5523] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5524] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5524] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5525] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5525] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5526] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5526] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5527] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5527] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5528] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5528] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5529] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5529] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5530] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5530] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5531] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5531] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5532] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5532] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5533] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5533] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5534] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5534] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5535] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5535] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5536] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5536] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5537] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5537] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5538] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5538] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5539] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5539] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5540] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5540] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5541] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5541] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5542] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5542] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5543] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5543] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5544] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5544] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5545] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5545] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5546] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5546] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5547] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5547] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5548] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5548] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5549] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5549] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5550] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5550] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5551] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5551] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5552] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5552] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5553] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5553] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5554] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5554] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5555] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5555] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5556] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5556] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5557] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5557] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5558] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5558] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5559] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5559] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5560] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5560] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5561] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5561] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5562] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5562] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5563] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5563] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5564] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5564] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5565] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5565] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5566] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5566] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5567] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5567] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5568] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5568] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5569] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5569] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5570] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5570] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5571] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5571] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5572] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5572] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5573] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5573] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5574] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5574] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5575] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5575] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5576] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5576] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5577] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5577] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5578] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5578] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5579] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5579] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5580] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5580] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5581] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5581] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5582] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5582] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5583] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5583] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5584] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5584] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5585] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5585] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5586] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5586] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5587] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5587] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5588] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5588] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5589] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5589] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5590] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5590] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5591] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5591] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5592] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5592] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5593] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5593] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5594] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5594] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5595] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5595] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5596] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5596] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5597] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5597] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5598] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5598] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5599] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5599] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5600] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5600] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5601] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5601] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5602] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5602] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5603] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5603] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5604] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5604] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5605] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5605] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5606] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5606] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5607] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5607] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5608] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5608] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5609] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5609] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5610] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5610] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5611] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5611] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5612] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5612] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5613] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5613] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5614] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5614] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5615] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5615] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5616] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5616] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5617] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5617] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5618] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5618] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5619] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5619] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5620] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5620] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5621] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5621] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5622] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5622] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5623] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5623] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5624] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5624] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5625] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5625] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5626] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5626] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5627] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5627] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5628] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5628] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5629] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5629] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5630] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5630] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5631] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5631] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5632] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5632] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5633] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5633] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5634] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5634] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5635] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5635] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5636] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5636] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5637] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5637] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5638] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5638] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5639] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5639] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5640] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5640] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5641] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5641] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5642] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5642] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5643] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5643] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5644] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5644] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5645] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5645] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5646] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5646] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5647] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5647] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5648] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5648] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5649] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5649] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5650] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5650] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5651] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5651] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5652] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5652] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5653] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5653] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5654] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5654] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5655] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5655] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5656] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5656] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5657] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5657] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5658] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5658] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5659] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5659] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5660] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5660] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5661] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5661] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5662] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5662] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5663] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5663] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5664] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5664] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5665] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5665] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5666] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5666] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5667] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5667] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5668] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5668] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5669] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5669] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5670] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5670] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5671] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5671] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5672] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5672] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5673] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5673] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5674] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5674] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5675] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5675] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5676] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5676] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5677] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5677] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5678] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5678] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5679] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5679] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5680] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5680] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5681] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5681] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5682] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5682] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5683] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5683] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5684] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5684] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5685] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5685] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5686] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5686] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5687] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5687] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5688] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5688] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5689] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5689] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5690] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5690] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5691] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5691] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5692] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5692] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5693] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5693] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5694] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5694] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5695] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5695] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5696] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5696] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5697] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5697] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5698] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5698] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5699] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5699] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5700] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5700] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5701] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5701] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5702] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5702] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5703] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5703] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5704] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5704] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5705] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5705] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5706] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5706] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5707] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5707] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5708] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5708] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5709] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5709] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5710] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5710] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5711] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5711] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5712] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5712] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5713] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5713] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5714] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5714] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5715] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5715] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5716] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5716] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5717] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5717] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5718] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5718] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5719] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5719] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5720] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5720] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5721] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5721] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5722] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5722] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5723] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5723] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5724] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5724] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5725] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5725] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5726] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5726] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5727] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5727] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5728] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5728] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5729] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5729] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5730] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5730] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5731] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5731] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5732] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5732] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5733] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5733] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5734] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5734] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5735] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5735] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5736] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5736] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5737] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5737] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5738] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5738] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5739] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5739] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5740] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5740] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5741] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5741] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5742] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5742] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5743] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5743] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5744] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5744] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5745] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5745] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5746] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5746] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5747] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5747] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5748] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5748] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5749] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5749] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5750] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5750] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5751] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5751] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5752] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5752] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5753] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5753] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5754] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5754] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5755] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5755] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5756] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5756] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5757] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5757] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5758] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5758] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5759] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5759] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5760] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5760] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5761] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5761] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5762] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5762] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5763] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5763] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5764] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5764] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5765] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5765] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5766] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5766] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5767] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5767] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5768] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5768] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5769] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5769] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5770] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5770] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5771] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5771] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5772] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5772] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5773] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5773] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5774] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5774] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5775] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5775] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5776] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5776] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5777] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5777] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5778] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5778] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5779] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5779] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5780] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5780] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5781] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5781] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5782] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5782] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5783] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5783] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5784] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5784] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5785] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5785] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5786] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5786] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5787] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5787] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5788] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5788] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5789] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5789] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5790] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5790] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5791] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5791] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5792] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5792] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5793] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5793] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5794] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5794] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5795] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5795] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5796] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5796] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5797] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5797] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5798] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5798] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5799] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5799] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5800] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5800] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5801] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5801] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5802] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5802] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5803] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5803] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5804] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5804] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5805] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5805] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5806] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5806] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5807] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5807] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5808] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5808] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5809] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5809] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5810] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5810] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5811] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5811] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5812] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5812] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5813] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5813] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5814] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5814] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5815] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5815] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5816] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5816] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5817] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5817] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5818] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5818] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5819] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5819] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5820] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5820] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5821] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5821] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5822] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5822] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5823] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5823] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5824] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5824] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5825] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5825] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5826] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5826] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5827] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5827] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5828] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5828] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5829] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5829] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5830] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5830] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5831] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5831] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5832] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5832] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5833] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5833] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5834] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5834] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5835] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5835] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5836] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5836] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5837] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5837] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5838] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5838] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5839] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5839] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5840] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5840] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5841] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5841] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5842] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5842] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5843] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5843] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5844] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5844] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5845] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5845] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5846] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5846] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5847] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5847] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5848] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5848] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5849] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5849] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5850] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5850] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5851] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5851] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5852] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5852] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5853] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5853] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5854] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5854] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5855] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5855] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5856] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5856] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5857] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5857] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5858] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5858] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5859] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5859] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5860] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5860] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5861] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5861] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5862] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5862] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5863] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5863] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5864] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5864] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5865] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5865] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5866] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5866] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5867] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5867] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5868] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5868] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5869] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5869] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5870] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5870] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5871] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5871] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5872] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5872] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5873] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5873] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5874] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5874] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5875] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5875] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5876] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5876] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5877] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5877] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5878] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5878] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5879] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5879] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5880] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5880] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5881] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5881] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5882] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5882] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5883] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5883] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5884] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5884] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5885] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5885] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5886] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5886] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5887] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5887] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5888] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5888] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5889] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5889] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5890] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5890] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5891] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5891] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5892] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5892] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5893] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5893] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5894] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5894] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5895] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5895] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5896] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5896] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5897] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5897] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5898] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5898] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5899] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5899] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5900] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5900] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5901] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5901] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5902] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5902] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5903] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5903] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5904] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5904] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5905] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5905] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5906] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5906] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5907] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5907] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5908] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5908] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5909] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5909] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5910] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5910] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5911] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5911] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5912] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5912] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5913] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5913] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5914] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5914] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5915] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5915] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5916] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5916] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5917] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5917] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5918] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5918] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5919] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5919] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5920] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5920] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5921] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5921] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5922] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5922] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5923] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5923] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5924] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5924] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5925] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5925] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5926] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5926] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5927] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5927] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5928] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5928] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5929] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5929] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5930] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5930] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5931] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5931] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5932] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5932] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5933] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5933] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5934] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5934] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5935] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5935] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5936] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5936] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5937] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5937] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5938] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5938] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5939] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5939] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5940] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5940] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5941] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5941] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5942] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5942] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5943] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5943] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5944] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5944] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5945] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5945] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5946] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5946] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5947] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5947] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5948] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5948] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5949] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5949] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5950] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5950] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5951] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5951] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5952] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5952] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5953] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5953] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5954] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5954] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5955] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5955] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5956] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5956] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5957] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5957] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5958] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5958] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5959] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5959] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5960] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5960] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5961] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5961] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5962] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5962] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5963] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5963] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5964] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5964] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5965] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5965] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5966] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5966] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5967] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5967] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5968] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5968] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5969] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5969] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5970] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5970] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5971] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5971] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5972] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5972] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5973] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5973] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5974] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5974] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5975] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5975] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5976] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5976] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5977] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5977] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5978] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5978] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5979] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5979] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5980] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5980] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5981] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5981] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5982] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5982] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5983] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5983] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5984] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5984] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5985] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5985] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5986] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5986] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5987] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5987] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5988] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5988] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5989] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5989] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5990] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5990] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5991] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5991] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5992] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5992] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5993] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5993] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5994] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5994] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5995] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5995] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5996] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5996] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5997] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5997] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5998] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5998] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5999] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[5999] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6000] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6000] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6001] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6001] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6002] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6002] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6003] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6003] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6004] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6004] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6005] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6005] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6006] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6006] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6007] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6007] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6008] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6008] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6009] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6009] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6010] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6010] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6011] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6011] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6012] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6012] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6013] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6013] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6014] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6014] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6015] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6015] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6016] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6016] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6017] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6017] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6018] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6018] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6019] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6019] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6020] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6020] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6021] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6021] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6022] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6022] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6023] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6023] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6024] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6024] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6025] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6025] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6026] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6026] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6027] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6027] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6028] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6028] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6029] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6029] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6030] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6030] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6031] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6031] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6032] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6032] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6033] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6033] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6034] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6034] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6035] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6035] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6036] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6036] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6037] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6037] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6038] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6038] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6039] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6039] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6040] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6040] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6041] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6041] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6042] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6042] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6043] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6043] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6044] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6044] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6045] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6045] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6046] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6046] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6047] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6047] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6048] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6048] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6049] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6049] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6050] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6050] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6051] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6051] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6052] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6052] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6053] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6053] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6054] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6054] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6055] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6055] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6056] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6056] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6057] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6057] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6058] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6058] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6059] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6059] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6060] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6060] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6061] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6061] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6062] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6062] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6063] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6063] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6064] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6064] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6065] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6065] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6066] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6066] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6067] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6067] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6068] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6068] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6069] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6069] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6070] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6070] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6071] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6071] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6072] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6072] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6073] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6073] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6074] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6074] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6075] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6075] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6076] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6076] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6077] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6077] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6078] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6078] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6079] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6079] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6080] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6080] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6081] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6081] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6082] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6082] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6083] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6083] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6084] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6084] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6085] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6085] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6086] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6086] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6087] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6087] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6088] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6088] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6089] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6089] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6090] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6090] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6091] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6091] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6092] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6092] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6093] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6093] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6094] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6094] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6095] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6095] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6096] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6096] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6097] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6097] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6098] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6098] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6099] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6099] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6100] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6100] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6101] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6101] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6102] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6102] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6103] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6103] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6104] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6104] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6105] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6105] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6106] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6106] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6107] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6107] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6108] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6108] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6109] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6109] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6110] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6110] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6111] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6111] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6112] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6112] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6113] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6113] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6114] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6114] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6115] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6115] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6116] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6116] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6117] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6117] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6118] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6118] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6119] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6119] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6120] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6120] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6121] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6121] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6122] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6122] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6123] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6123] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6124] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6124] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6125] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6125] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6126] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6126] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6127] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6127] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6128] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6128] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6129] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6129] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6130] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6130] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6131] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6131] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6132] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6132] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6133] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6133] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6134] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6134] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6135] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6135] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6136] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6136] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6137] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6137] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6138] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6138] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6139] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6139] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6140] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6140] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6141] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6141] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6142] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6142] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6143] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6143] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6144] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6144] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6145] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6145] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6146] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6146] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6147] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6147] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6148] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6148] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6149] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6149] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6150] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6150] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6151] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6151] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6152] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6152] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6153] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6153] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6154] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6154] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6155] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6155] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6156] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6156] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6157] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6157] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6158] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6158] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6159] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6159] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6160] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6160] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6161] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6161] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6162] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6162] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6163] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6163] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6164] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6164] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6165] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6165] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6166] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6166] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6167] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6167] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6168] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6168] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6169] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6169] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6170] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6170] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6171] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6171] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6172] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6172] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6173] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6173] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6174] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6174] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6175] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6175] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6176] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6176] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6177] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6177] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6178] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6178] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6179] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6179] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6180] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6180] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6181] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6181] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6182] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6182] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6183] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6183] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6184] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6184] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6185] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6185] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6186] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6186] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6187] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6187] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6188] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6188] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6189] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6189] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6190] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6190] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6191] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6191] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6192] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6192] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6193] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6193] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6194] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6194] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6195] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6195] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6196] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6196] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6197] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6197] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6198] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6198] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6199] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6199] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6200] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6200] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6201] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6201] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6202] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6202] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6203] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6203] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6204] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6204] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6205] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6205] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6206] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6206] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6207] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6207] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6208] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6208] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6209] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6209] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6210] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6210] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6211] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6211] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6212] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6212] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6213] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6213] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6214] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6214] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6215] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6215] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6216] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6216] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6217] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6217] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6218] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6218] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6219] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6219] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6220] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6220] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6221] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6221] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6222] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6222] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6223] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6223] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6224] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6224] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6225] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6225] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6226] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6226] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6227] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6227] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6228] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6228] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6229] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6229] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6230] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6230] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6231] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6231] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6232] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6232] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6233] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6233] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6234] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6234] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6235] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6235] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6236] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6236] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6237] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6237] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6238] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6238] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6239] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6239] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6240] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6240] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6241] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6241] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6242] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6242] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6243] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6243] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6244] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6244] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6245] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6245] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6246] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6246] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6247] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6247] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6248] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6248] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6249] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6249] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6250] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6250] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6251] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6251] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6252] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6252] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6253] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6253] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6254] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6254] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6255] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6255] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6256] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6256] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6257] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6257] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6258] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6258] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6259] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6259] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6260] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6260] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6261] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6261] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6262] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6262] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6263] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6263] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6264] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6264] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6265] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6265] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6266] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6266] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6267] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6267] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6268] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6268] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6269] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6269] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6270] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6270] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6271] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6271] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6272] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6272] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6273] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6273] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6274] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6274] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6275] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6275] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6276] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6276] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6277] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6277] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6278] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6278] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6279] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6279] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6280] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6280] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6281] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6281] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6282] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6282] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6283] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6283] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6284] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6284] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6285] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6285] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6286] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6286] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6287] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6287] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6288] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6288] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6289] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6289] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6290] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6290] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6291] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6291] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6292] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6292] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6293] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6293] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6294] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6294] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6295] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6295] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6296] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6296] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6297] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6297] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6298] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6298] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6299] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6299] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6300] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6300] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6301] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6301] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6302] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6302] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6303] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6303] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6304] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6304] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6305] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6305] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6306] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6306] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6307] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6307] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6308] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6308] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6309] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6309] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6310] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6310] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6311] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6311] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6312] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6312] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6313] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6313] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6314] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6314] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6315] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6315] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6316] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6316] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6317] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6317] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6318] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6318] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6319] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6319] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6320] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6320] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6321] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6321] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6322] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6322] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6323] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6323] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6324] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6324] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6325] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6325] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6326] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6326] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6327] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6327] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6328] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6328] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6329] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6329] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6330] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6330] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6331] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6331] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6332] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6332] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6333] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6333] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6334] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6334] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6335] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6335] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6336] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6336] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6337] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6337] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6338] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6338] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6339] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6339] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6340] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6340] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6341] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6341] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6342] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6342] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6343] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6343] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6344] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6344] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6345] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6345] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6346] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6346] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6347] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6347] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6348] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6348] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6349] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6349] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6350] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6350] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6351] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6351] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6352] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6352] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6353] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6353] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6354] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6354] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6355] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6355] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6356] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6356] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6357] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6357] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6358] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6358] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6359] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6359] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6360] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6360] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6361] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6361] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6362] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6362] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6363] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6363] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6364] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6364] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6365] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6365] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6366] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6366] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6367] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6367] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6368] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6368] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6369] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6369] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6370] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6370] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6371] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6371] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6372] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6372] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6373] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6373] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6374] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6374] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6375] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6375] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6376] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6376] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6377] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6377] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6378] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6378] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6379] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6379] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6380] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6380] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6381] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6381] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6382] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6382] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6383] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6383] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6384] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6384] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6385] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6385] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6386] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6386] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6387] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6387] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6388] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6388] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6389] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6389] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6390] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6390] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6391] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6391] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6392] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6392] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6393] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6393] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6394] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6394] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6395] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6395] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6396] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6396] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6397] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6397] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6398] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6398] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6399] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6399] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6400] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6400] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6401] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6401] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6402] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6402] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6403] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6403] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6404] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6404] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6405] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6405] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6406] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6406] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6407] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6407] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6408] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6408] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6409] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6409] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6410] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6410] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6411] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6411] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6412] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6412] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6413] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6413] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6414] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6414] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6415] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6415] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6416] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6416] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6417] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6417] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6418] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6418] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6419] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6419] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6420] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6420] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6421] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6421] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6422] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6422] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6423] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6423] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6424] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6424] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6425] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6425] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6426] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6426] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6427] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6427] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6428] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6428] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6429] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6429] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6430] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6430] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6431] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6431] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6432] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6432] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6433] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6433] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6434] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6434] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6435] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6435] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6436] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6436] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6437] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6437] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6438] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6438] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6439] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6439] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6440] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6440] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6441] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6441] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6442] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6442] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6443] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6443] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6444] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6444] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6445] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6445] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6446] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6446] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6447] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6447] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6448] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6448] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6449] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6449] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6450] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6450] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6451] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6451] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6452] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6452] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6453] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6453] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6454] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6454] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6455] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6455] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6456] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6456] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6457] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6457] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6458] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6458] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6459] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6459] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6460] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6460] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6461] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6461] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6462] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6462] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6463] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6463] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6464] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6464] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6465] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6465] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6466] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6466] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6467] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6467] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6468] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6468] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6469] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6469] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6470] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6470] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6471] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6471] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6472] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6472] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6473] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6473] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6474] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6474] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6475] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6475] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6476] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6476] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6477] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6477] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6478] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6478] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6479] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6479] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6480] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6480] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6481] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6481] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6482] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6482] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6483] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6483] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6484] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6484] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6485] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6485] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6486] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6486] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6487] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6487] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6488] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6488] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6489] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6489] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6490] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6490] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6491] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6491] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6492] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6492] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6493] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6493] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6494] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6494] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6495] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6495] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6496] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6496] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6497] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6497] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6498] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6498] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6499] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6499] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6500] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6500] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6501] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6501] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6502] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6502] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6503] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6503] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6504] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6504] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6505] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6505] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6506] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6506] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6507] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6507] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6508] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6508] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6509] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6509] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6510] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6510] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6511] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6511] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6512] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6512] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6513] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6513] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6514] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6514] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6515] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6515] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6516] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6516] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6517] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6517] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6518] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6518] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6519] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6519] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6520] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6520] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6521] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6521] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6522] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6522] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6523] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6523] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6524] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6524] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6525] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6525] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6526] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6526] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6527] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6527] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6528] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6528] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6529] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6529] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6530] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6530] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6531] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6531] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6532] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6532] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6533] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6533] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6534] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6534] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6535] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6535] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6536] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6536] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6537] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6537] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6538] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6538] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6539] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6539] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6540] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6540] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6541] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6541] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6542] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6542] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6543] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6543] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6544] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6544] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6545] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6545] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6546] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6546] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6547] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6547] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6548] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6548] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6549] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6549] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6550] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6550] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6551] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6551] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6552] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6552] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6553] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6553] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6554] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6554] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6555] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6555] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6556] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6556] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6557] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6557] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6558] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6558] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6559] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6559] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6560] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6560] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6561] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6561] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6562] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6562] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6563] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6563] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6564] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6564] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6565] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6565] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6566] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6566] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6567] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6567] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6568] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6568] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6569] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6569] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6570] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6570] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6571] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6571] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6572] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6572] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6573] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6573] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6574] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6574] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6575] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6575] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6576] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6576] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6577] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6577] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6578] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6578] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6579] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6579] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6580] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6580] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6581] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6581] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6582] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6582] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6583] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6583] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6584] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6584] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6585] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6585] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6586] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6586] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6587] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6587] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6588] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6588] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6589] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6589] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6590] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6590] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6591] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6591] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6592] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6592] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6593] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6593] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6594] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6594] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6595] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6595] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6596] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6596] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6597] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6597] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6598] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6598] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6599] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6599] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6600] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6600] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6601] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6601] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6602] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6602] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6603] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6603] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6604] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6604] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6605] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6605] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6606] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6606] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6607] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6607] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6608] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6608] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6609] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6609] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6610] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6610] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6611] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6611] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6612] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6612] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6613] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6613] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6614] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6614] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6615] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6615] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6616] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6616] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6617] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6617] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6618] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6618] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6619] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6619] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6620] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6620] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6621] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6621] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6622] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6622] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6623] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6623] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6624] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6624] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6625] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6625] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6626] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6626] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6627] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6627] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6628] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6628] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6629] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6629] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6630] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6630] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6631] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6631] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6632] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6632] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6633] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6633] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6634] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6634] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6635] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6635] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6636] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6636] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6637] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6637] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6638] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6638] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6639] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6639] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6640] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6640] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6641] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6641] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6642] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6642] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6643] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6643] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6644] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6644] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6645] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6645] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6646] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6646] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6647] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6647] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6648] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6648] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6649] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6649] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6650] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6650] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6651] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6651] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6652] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6652] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6653] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6653] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6654] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6654] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6655] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6655] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6656] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6656] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6657] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6657] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6658] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6658] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6659] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6659] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6660] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6660] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6661] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6661] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6662] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6662] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6663] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6663] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6664] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6664] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6665] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6665] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6666] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6666] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6667] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6667] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6668] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6668] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6669] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6669] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6670] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6670] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6671] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6671] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6672] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6672] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6673] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6673] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6674] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6674] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6675] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6675] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6676] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6676] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6677] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6677] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6678] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6678] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6679] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6679] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6680] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6680] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6681] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6681] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6682] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6682] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6683] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6683] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6684] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6684] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6685] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6685] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6686] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6686] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6687] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6687] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6688] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6688] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6689] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6689] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6690] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6690] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6691] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6691] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6692] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6692] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6693] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6693] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6694] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6694] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6695] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6695] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6696] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6696] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6697] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6697] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6698] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6698] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6699] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6699] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6700] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6700] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6701] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6701] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6702] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6702] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6703] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6703] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6704] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6704] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6705] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6705] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6706] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6706] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6707] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6707] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6708] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6708] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6709] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6709] PASSED

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6710] STANDARD_OUT
    0

ConcurrentSetTest > Functional correctness test for remove(Integer element) > testingconcurrency.ConcurrentSetTest.removeTest()[6710] PASSED


